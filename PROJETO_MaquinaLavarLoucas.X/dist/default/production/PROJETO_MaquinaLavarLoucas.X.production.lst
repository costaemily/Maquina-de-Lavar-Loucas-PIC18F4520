

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 07 14:44:52 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4520 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     _TRISB	set	3987
    67  0000                     _TRISC	set	3988
    68  0000                     _TRISE	set	3990
    69  0000                     _PORTBbits	set	3969
    70  0000                     _PORTA	set	3968
    71  0000                     _ADCON1	set	4033
    72  0000                     _TRISD	set	3989
    73  0000                     _TRISA	set	3986
    74  0000                     _PORTCbits	set	3970
    75  0000                     _PORTEbits	set	3972
    76  0000                     _PORTD	set	3971
    77                           
    78                           	psect	smallconst
    79  000600                     __psmallconst:
    80                           	callstack 0
    81  000600  00                 	db	0
    82  000601                     STR_11:
    83  000601  44                 	db	68	;'D'
    84  000602  45                 	db	69	;'E'
    85  000603  53                 	db	83	;'S'
    86  000604  4C                 	db	76	;'L'
    87  000605  49                 	db	73	;'I'
    88  000606  47                 	db	71	;'G'
    89  000607  41                 	db	65	;'A'
    90  000608  44                 	db	68	;'D'
    91  000609  41                 	db	65	;'A'
    92  00060A  00                 	db	0
    93  00060B                     STR_1:
    94  00060B  45                 	db	69	;'E'
    95  00060C  73                 	db	115	;'s'
    96  00060D  74                 	db	116	;'t'
    97  00060E  61                 	db	97	;'a'
    98  00060F  64                 	db	100	;'d'
    99  000610  6F                 	db	111	;'o'
   100  000611  3A                 	db	58	;':'
   101  000612  20                 	db	32
   102  000613  00                 	db	0
   103  000614                     STR_7:
   104  000614  44                 	db	68	;'D'
   105  000615  52                 	db	82	;'R'
   106  000616  45                 	db	69	;'E'
   107  000617  4E                 	db	78	;'N'
   108  000618  41                 	db	65	;'A'
   109  000619  4E                 	db	78	;'N'
   110  00061A  44                 	db	68	;'D'
   111  00061B  4F                 	db	79	;'O'
   112  00061C  00                 	db	0
   113  00061D                     STR_4:
   114  00061D  45                 	db	69	;'E'
   115  00061E  53                 	db	83	;'S'
   116  00061F  43                 	db	67	;'C'
   117  000620  4F                 	db	79	;'O'
   118  000621  41                 	db	65	;'A'
   119  000622  4E                 	db	78	;'N'
   120  000623  44                 	db	68	;'D'
   121  000624  4F                 	db	79	;'O'
   122  000625  00                 	db	0
   123  000626                     STR_3:
   124  000626  45                 	db	69	;'E'
   125  000627  4E                 	db	78	;'N'
   126  000628  43                 	db	67	;'C'
   127  000629  48                 	db	72	;'H'
   128  00062A  45                 	db	69	;'E'
   129  00062B  4E                 	db	78	;'N'
   130  00062C  44                 	db	68	;'D'
   131  00062D  4F                 	db	79	;'O'
   132  00062E  00                 	db	0
   133  00062F                     STR_8:
   134  00062F  4C                 	db	76	;'L'
   135  000630  49                 	db	73	;'I'
   136  000631  51                 	db	81	;'Q'
   137  000632  55                 	db	85	;'U'
   138  000633  49                 	db	73	;'I'
   139  000634  44                 	db	68	;'D'
   140  000635  4F                 	db	79	;'O'
   141  000636  00                 	db	0
   142  000637                     STR_5:
   143  000637  4C                 	db	76	;'L'
   144  000638  41                 	db	65	;'A'
   145  000639  56                 	db	86	;'V'
   146  00063A  41                 	db	65	;'A'
   147  00063B  4E                 	db	78	;'N'
   148  00063C  44                 	db	68	;'D'
   149  00063D  4F                 	db	79	;'O'
   150  00063E  00                 	db	0
   151  00063F  00                 	db	0	; dummy byte at the end
   152  0000                     
   153                           ; #config settings
   154                           
   155                           	psect	cinit
   156  0011F8                     __pcinit:
   157                           	callstack 0
   158  0011F8                     start_initialization:
   159                           	callstack 0
   160  0011F8                     __initialization:
   161                           	callstack 0
   162                           
   163                           ; Clear objects allocated to COMRAM (69 bytes)
   164  0011F8  EE00  F001         	lfsr	0,__pbssCOMRAM
   165  0011FC  0E45               	movlw	69
   166  0011FE                     clear_0:
   167  0011FE  6AEE               	clrf	postinc0,c
   168  001200  06E8               	decf	wreg,f,c
   169  001202  E1FD               	bnz	clear_0
   170  001204                     end_of_initialization:
   171                           	callstack 0
   172  001204                     __end_of__initialization:
   173                           	callstack 0
   174  001204  0E00               	movlw	low (__Lmediumconst shr (0+16))
   175  001206  6EF8               	movwf	tblptru,c
   176  001208  0100               	movlb	0
   177  00120A  EF3E  F008         	goto	_main	;jump to C main() function
   178                           
   179                           	psect	bssCOMRAM
   180  000001                     __pbssCOMRAM:
   181                           	callstack 0
   182  000001                     	ds	32
   183  000021                     _nout:
   184                           	callstack 0
   185  000021                     	ds	2
   186  000023                     _width:
   187                           	callstack 0
   188  000023                     	ds	2
   189  000025                     _prec:
   190                           	callstack 0
   191  000025                     	ds	2
   192  000027                     _flags:
   193                           	callstack 0
   194  000027                     	ds	2
   195  000029                     _escoamentoDoLiquidoSecante:
   196                           	callstack 0
   197  000029                     	ds	2
   198  00002B                     _liquidoSecante:
   199                           	callstack 0
   200  00002B                     	ds	2
   201  00002D                     _drenarAgua:
   202                           	callstack 0
   203  00002D                     	ds	2
   204  00002F                     _cicloDeLavagem:
   205                           	callstack 0
   206  00002F                     	ds	2
   207  000031                     _enchendoDeAguaESabao:
   208                           	callstack 0
   209  000031                     	ds	2
   210  000033                     _desligado:
   211                           	callstack 0
   212  000033                     	ds	2
   213  000035                     _statusTimer:
   214                           	callstack 0
   215  000035                     	ds	2
   216  000037                     _estadoMes:
   217                           	callstack 0
   218  000037                     	ds	15
   219                           
   220                           	psect	cstackCOMRAM
   221  000046                     __pcstackCOMRAM:
   222                           	callstack 0
   223  000046                     ??_display7s:
   224  000046                     ??_tocaBuzzer:
   225  000046                     ?___awdiv:
   226                           	callstack 0
   227  000046                     ?___awmod:
   228                           	callstack 0
   229  000046                     lcd_wr@val:
   230                           	callstack 0
   231  000046                     ___awdiv@dividend:
   232                           	callstack 0
   233  000046                     ___awmod@dividend:
   234                           	callstack 0
   235  000046                     fputc@c:
   236                           	callstack 0
   237                           
   238                           ; 2 bytes @ 0x0
   239  000046                     	ds	1
   240  000047                     ??_lcd_cmd:
   241  000047                     ??_lcd_dat:
   242  000047                     tocaBuzzer@i:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0x1
   246  000047                     	ds	1
   247  000048                     lcd_cmd@val:
   248                           	callstack 0
   249  000048                     lcd_dat@val:
   250                           	callstack 0
   251  000048                     display7s@v:
   252                           	callstack 0
   253  000048                     ___awdiv@divisor:
   254                           	callstack 0
   255  000048                     ___awmod@divisor:
   256                           	callstack 0
   257  000048                     fputc@fp:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x2
   261  000048                     	ds	1
   262  000049                     ??_lcd_init:
   263  000049                     lcd_str@str:
   264                           	callstack 0
   265                           
   266                           ; 2 bytes @ 0x3
   267  000049                     	ds	1
   268  00004A                     ??_fputc:
   269  00004A                     ___awdiv@counter:
   270                           	callstack 0
   271  00004A                     ___awmod@counter:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x4
   275  00004A                     	ds	1
   276  00004B                     ??_lcd_str:
   277  00004B                     ___awdiv@sign:
   278                           	callstack 0
   279  00004B                     ___awmod@sign:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x5
   283  00004B                     	ds	1
   284  00004C                     ___awdiv@quotient:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x6
   288  00004C                     	ds	1
   289  00004D                     lcd_str@i:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x7
   293  00004D                     	ds	1
   294  00004E                     ?_timer:
   295                           	callstack 0
   296  00004E                     timer@min:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x8
   300  00004E                     	ds	1
   301  00004F                     ?_vfpfcnvrt:
   302                           	callstack 0
   303  00004F                     vfpfcnvrt@fp:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x9
   307  00004F                     	ds	1
   308  000050                     ??_timer:
   309                           
   310                           ; 1 bytes @ 0xA
   311  000050                     	ds	1
   312  000051                     timer@segU:
   313                           	callstack 0
   314  000051                     vfpfcnvrt@fmt:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0xB
   318  000051                     	ds	1
   319  000052                     timer@segD:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0xC
   323  000052                     	ds	1
   324  000053                     timer@minU:
   325                           	callstack 0
   326  000053                     vfpfcnvrt@ap:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0xD
   330  000053                     	ds	1
   331  000054                     timer@minD:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0xE
   335  000054                     	ds	1
   336  000055                     ?_vfprintf:
   337                           	callstack 0
   338  000055                     timer@j:
   339                           	callstack 0
   340  000055                     vfprintf@fp:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0xF
   344  000055                     	ds	1
   345  000056                     timer@k:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x10
   349  000056                     	ds	1
   350  000057                     timer@i:
   351                           	callstack 0
   352  000057                     vfprintf@fmt:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x11
   356  000057                     	ds	2
   357  000059                     vfprintf@ap:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x13
   361  000059                     	ds	2
   362  00005B                     vfprintf@cfmt:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x15
   366  00005B                     	ds	2
   367  00005D                     ?_sprintf:
   368                           	callstack 0
   369  00005D                     sprintf@s:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x17
   373  00005D                     	ds	2
   374  00005F                     sprintf@fmt:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x19
   378  00005F                     	ds	2
   379  000061                     
   380                           ; 1 bytes @ 0x1B
   381  000061                     	ds	2
   382  000063                     sprintf@ap:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x1D
   386  000063                     	ds	2
   387  000065                     sprintf@f:
   388                           	callstack 0
   389                           
   390                           ; 6 bytes @ 0x1F
   391  000065                     	ds	6
   392  00006B                     ??_estadosMaquina:
   393                           
   394                           ; 1 bytes @ 0x25
   395  00006B                     	ds	2
   396  00006D                     
   397                           ; 1 bytes @ 0x27
   398 ;;
   399 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   400 ;;
   401 ;; *************** function _main *****************
   402 ;; Defined at:
   403 ;;		line 176 in file "principal.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;		None
   406 ;; Auto vars:     Size  Location     Type
   407 ;;		None
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   417 ;;      Params:         0       0       0       0       0       0       0
   418 ;;      Locals:         0       0       0       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0       0       0
   420 ;;      Totals:         0       0       0       0       0       0       0
   421 ;;Total ram usage:        0 bytes
   422 ;; Hardware stack levels required when called:    6
   423 ;; This function calls:
   424 ;;		_estadosMaquina
   425 ;;		_lcd_init
   426 ;; This function is called by:
   427 ;;		Startup code after reset
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           	psect	text0
   432  00107C                     __ptext0:
   433                           	callstack 0
   434  00107C                     _main:
   435                           	callstack 25
   436  00107C                     
   437                           ;principal.c: 177:     TRISD = 0x00;
   438  00107C  0E00               	movlw	0
   439  00107E  6E95               	movwf	149,c	;volatile
   440                           
   441                           ;principal.c: 178:     TRISE = 0x00;
   442  001080  0E00               	movlw	0
   443  001082  6E96               	movwf	150,c	;volatile
   444                           
   445                           ;principal.c: 179:     TRISC = 0x00;
   446  001084  0E00               	movlw	0
   447  001086  6E94               	movwf	148,c	;volatile
   448                           
   449                           ;principal.c: 180:     TRISB = 0x0f;
   450  001088  0E0F               	movlw	15
   451  00108A  6E93               	movwf	147,c	;volatile
   452  00108C                     
   453                           ;principal.c: 182:     lcd_init();
   454  00108C  ECDE  F007         	call	_lcd_init	;wreg free
   455  001090                     
   456                           ;principal.c: 185:     desligado = 1;
   457  001090  0E00               	movlw	0
   458  001092  6E34               	movwf	(_desligado+1)^0,c
   459  001094  0E01               	movlw	1
   460  001096  6E33               	movwf	_desligado^0,c
   461  001098                     
   462                           ;principal.c: 186:     enchendoDeAguaESabao = 0;
   463  001098  0E00               	movlw	0
   464  00109A  6E32               	movwf	(_enchendoDeAguaESabao+1)^0,c
   465  00109C  0E00               	movlw	0
   466  00109E  6E31               	movwf	_enchendoDeAguaESabao^0,c
   467  0010A0                     
   468                           ;principal.c: 187:     cicloDeLavagem = 0;
   469  0010A0  0E00               	movlw	0
   470  0010A2  6E30               	movwf	(_cicloDeLavagem+1)^0,c
   471  0010A4  0E00               	movlw	0
   472  0010A6  6E2F               	movwf	_cicloDeLavagem^0,c
   473  0010A8                     
   474                           ;principal.c: 188:     drenarAgua = 0;
   475  0010A8  0E00               	movlw	0
   476  0010AA  6E2E               	movwf	(_drenarAgua+1)^0,c
   477  0010AC  0E00               	movlw	0
   478  0010AE  6E2D               	movwf	_drenarAgua^0,c
   479  0010B0                     
   480                           ;principal.c: 189:     liquidoSecante = 0;
   481  0010B0  0E00               	movlw	0
   482  0010B2  6E2C               	movwf	(_liquidoSecante+1)^0,c
   483  0010B4  0E00               	movlw	0
   484  0010B6  6E2B               	movwf	_liquidoSecante^0,c
   485  0010B8                     
   486                           ;principal.c: 190:     escoamentoDoLiquidoSecante = 0;
   487  0010B8  0E00               	movlw	0
   488  0010BA  6E2A               	movwf	(_escoamentoDoLiquidoSecante+1)^0,c
   489  0010BC  0E00               	movlw	0
   490  0010BE  6E29               	movwf	_escoamentoDoLiquidoSecante^0,c
   491  0010C0                     
   492                           ;principal.c: 192:     PORTBbits.RB7 = 0;
   493  0010C0  9E81               	bcf	129,7,c	;volatile
   494  0010C2                     
   495                           ;principal.c: 193:     PORTBbits.RB5 = 0;
   496  0010C2  9A81               	bcf	129,5,c	;volatile
   497  0010C4                     
   498                           ;principal.c: 194:     PORTBbits.RB4 = 0;
   499  0010C4  9881               	bcf	129,4,c	;volatile
   500  0010C6                     
   501                           ;principal.c: 195:     PORTBbits.RB6 = 0;
   502  0010C6  9C81               	bcf	129,6,c	;volatile
   503  0010C8                     l1858:
   504                           
   505                           ;principal.c: 198:         estadosMaquina();
   506  0010C8  EC20  F003         	call	_estadosMaquina	;wreg free
   507  0010CC  EF64  F008         	goto	l1858
   508  0010D0  EF00  F000         	goto	start
   509  0010D4                     __end_of_main:
   510                           	callstack 0
   511                           
   512 ;; *************** function _lcd_init *****************
   513 ;; Defined at:
   514 ;;		line 57 in file "lcd.c"
   515 ;; Parameters:    Size  Location     Type
   516 ;;		None
   517 ;; Auto vars:     Size  Location     Type
   518 ;;		None
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, status,2, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   528 ;;      Params:         0       0       0       0       0       0       0
   529 ;;      Locals:         0       0       0       0       0       0       0
   530 ;;      Temps:          1       0       0       0       0       0       0
   531 ;;      Totals:         1       0       0       0       0       0       0
   532 ;;Total ram usage:        1 bytes
   533 ;; Hardware stack levels used:    1
   534 ;; Hardware stack levels required when called:    2
   535 ;; This function calls:
   536 ;;		_lcd_cmd
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           
   542                           	psect	text1
   543  000FBC                     __ptext1:
   544                           	callstack 0
   545  000FBC                     _lcd_init:
   546                           	callstack 28
   547  000FBC                     
   548                           ;lcd.c: 59:  PORTEbits.RE1=0;
   549  000FBC  9284               	bcf	132,1,c	;volatile
   550                           
   551                           ;lcd.c: 60:  PORTEbits.RE2=0;
   552  000FBE  9484               	bcf	132,2,c	;volatile
   553  000FC0                     
   554                           ;lcd.c: 61:  _delay((unsigned long)((20)*(8000000/4000.0)));
   555  000FC0  0E34               	movlw	52
   556  000FC2  6E49               	movwf	??_lcd_init^0,c
   557  000FC4  0EF2               	movlw	242
   558  000FC6                     u1007:
   559  000FC6  2EE8               	decfsz	wreg,f,c
   560  000FC8  D7FE               	bra	u1007
   561  000FCA  2E49               	decfsz	??_lcd_init^0,f,c
   562  000FCC  D7FC               	bra	u1007
   563  000FCE                     
   564                           ;lcd.c: 62:  PORTEbits.RE1=1;
   565  000FCE  8284               	bsf	132,1,c	;volatile
   566  000FD0                     
   567                           ;lcd.c: 64:  lcd_cmd(0x38);
   568  000FD0  0E38               	movlw	56
   569  000FD2  ECCF  F008         	call	_lcd_cmd
   570  000FD6                     
   571                           ;lcd.c: 65:  _delay((unsigned long)((5)*(8000000/4000.0)));
   572  000FD6  0E0D               	movlw	13
   573  000FD8  6E49               	movwf	??_lcd_init^0,c
   574  000FDA  0EFC               	movlw	252
   575  000FDC                     u1017:
   576  000FDC  2EE8               	decfsz	wreg,f,c
   577  000FDE  D7FE               	bra	u1017
   578  000FE0  2E49               	decfsz	??_lcd_init^0,f,c
   579  000FE2  D7FC               	bra	u1017
   580                           
   581                           ;lcd.c: 66:  lcd_cmd(0x38);
   582  000FE4  0E38               	movlw	56
   583  000FE6  ECCF  F008         	call	_lcd_cmd
   584  000FEA                     
   585                           ;lcd.c: 67:     _delay((unsigned long)((1)*(8000000/4000.0)));
   586  000FEA  0E03               	movlw	3
   587  000FEC  6E49               	movwf	??_lcd_init^0,c
   588  000FEE  0E98               	movlw	152
   589  000FF0                     u1027:
   590  000FF0  2EE8               	decfsz	wreg,f,c
   591  000FF2  D7FE               	bra	u1027
   592  000FF4  2E49               	decfsz	??_lcd_init^0,f,c
   593  000FF6  D7FC               	bra	u1027
   594  000FF8                     
   595                           ;lcd.c: 68:  lcd_cmd(0x38);
   596  000FF8  0E38               	movlw	56
   597  000FFA  ECCF  F008         	call	_lcd_cmd
   598  000FFE                     
   599                           ;lcd.c: 69:  lcd_cmd(0x08);
   600  000FFE  0E08               	movlw	8
   601  001000  ECCF  F008         	call	_lcd_cmd
   602  001004                     
   603                           ;lcd.c: 70:  lcd_cmd(0x0F);
   604  001004  0E0F               	movlw	15
   605  001006  ECCF  F008         	call	_lcd_cmd
   606  00100A                     
   607                           ;lcd.c: 71:  lcd_cmd(0x01);
   608  00100A  0E01               	movlw	1
   609  00100C  ECCF  F008         	call	_lcd_cmd
   610  001010                     
   611                           ;lcd.c: 72:  lcd_cmd(0x38);
   612  001010  0E38               	movlw	56
   613  001012  ECCF  F008         	call	_lcd_cmd
   614  001016                     
   615                           ;lcd.c: 73:         lcd_cmd(0x80);
   616  001016  0E80               	movlw	128
   617  001018  ECCF  F008         	call	_lcd_cmd
   618  00101C  0012               	return		;funcret
   619  00101E                     __end_of_lcd_init:
   620                           	callstack 0
   621                           
   622 ;; *************** function _estadosMaquina *****************
   623 ;; Defined at:
   624 ;;		line 83 in file "principal.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   638 ;;      Params:         0       0       0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0       0       0
   640 ;;      Temps:          2       0       0       0       0       0       0
   641 ;;      Totals:         2       0       0       0       0       0       0
   642 ;;Total ram usage:        2 bytes
   643 ;; Hardware stack levels used:    1
   644 ;; Hardware stack levels required when called:    5
   645 ;; This function calls:
   646 ;;		_escreve
   647 ;;		_sprintf
   648 ;;		_timer
   649 ;;		_tocaBuzzer
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text2
   656  000640                     __ptext2:
   657                           	callstack 0
   658  000640                     _estadosMaquina:
   659                           	callstack 25
   660  000640                     
   661                           ;principal.c: 85:     if ((desligado == 1) && (PORTBbits.RB0 == 0)) {
   662  000640  0433               	decf	_desligado^0,w,c
   663  000642  1034               	iorwf	(_desligado+1)^0,w,c
   664  000644  A4D8               	btfss	status,2,c
   665  000646  EF27  F003         	goto	u771
   666  00064A  EF29  F003         	goto	u770
   667  00064E                     u771:
   668  00064E  EF4A  F003         	goto	l1688
   669  000652                     u770:
   670  000652  B081               	btfsc	129,0,c	;volatile
   671  000654  EF2E  F003         	goto	u781
   672  000658  EF30  F003         	goto	u780
   673  00065C                     u781:
   674  00065C  EF4A  F003         	goto	l1688
   675  000660                     u780:
   676  000660                     
   677                           ;principal.c: 86:         desligado = 0;
   678  000660  0E00               	movlw	0
   679  000662  6E34               	movwf	(_desligado+1)^0,c
   680  000664  0E00               	movlw	0
   681  000666  6E33               	movwf	_desligado^0,c
   682  000668                     
   683                           ;principal.c: 87:         PORTBbits.RB7 = 1;
   684  000668  8E81               	bsf	129,7,c	;volatile
   685  00066A                     
   686                           ;principal.c: 88:         sprintf(estadoMes, "LIGADA");
   687  00066A  0E37               	movlw	low _estadoMes
   688  00066C  6E5D               	movwf	sprintf@s^0,c
   689  00066E  0E00               	movlw	high _estadoMes
   690  000670  6E5E               	movwf	(sprintf@s+1)^0,c
   691  000672  0E04               	movlw	low (STR_11+3)
   692  000674  6E5F               	movwf	sprintf@fmt^0,c
   693  000676  0E06               	movlw	high (STR_11+3)
   694  000678  6E60               	movwf	(sprintf@fmt+1)^0,c
   695  00067A  EC91  F008         	call	_sprintf	;wreg free
   696  00067E                     l1684:
   697                           
   698                           ;principal.c: 89:         escreve();
   699  00067E  ECE6  F008         	call	_escreve	;wreg free
   700  000682                     
   701                           ;principal.c: 90:         _delay((unsigned long)((20)*(8000000/4000.0)));
   702  000682  0E34               	movlw	52
   703  000684  6E6B               	movwf	??_estadosMaquina^0,c
   704  000686  0EF2               	movlw	242
   705  000688                     u1037:
   706  000688  2EE8               	decfsz	wreg,f,c
   707  00068A  D7FE               	bra	u1037
   708  00068C  2E6B               	decfsz	??_estadosMaquina^0,f,c
   709  00068E  D7FC               	bra	u1037
   710                           
   711                           ;principal.c: 91:     } else if ((desligado == 0) && (PORTBbits.RB1 == 0)) {
   712  000690  EFE5  F004         	goto	l123
   713  000694                     l1688:
   714  000694  5033               	movf	_desligado^0,w,c
   715  000696  1034               	iorwf	(_desligado+1)^0,w,c
   716  000698  A4D8               	btfss	status,2,c
   717  00069A  EF51  F003         	goto	u791
   718  00069E  EF53  F003         	goto	u790
   719  0006A2                     u791:
   720  0006A2  EF6D  F003         	goto	l1706
   721  0006A6                     u790:
   722  0006A6  B281               	btfsc	129,1,c	;volatile
   723  0006A8  EF58  F003         	goto	u801
   724  0006AC  EF5A  F003         	goto	u800
   725  0006B0                     u801:
   726  0006B0  EF6D  F003         	goto	l1706
   727  0006B4                     u800:
   728  0006B4                     
   729                           ;principal.c: 92:         enchendoDeAguaESabao = 1;
   730  0006B4  0E00               	movlw	0
   731  0006B6  6E32               	movwf	(_enchendoDeAguaESabao+1)^0,c
   732  0006B8  0E01               	movlw	1
   733  0006BA  6E31               	movwf	_enchendoDeAguaESabao^0,c
   734  0006BC                     
   735                           ;principal.c: 93:         PORTBbits.RB6 = 1;
   736  0006BC  8C81               	bsf	129,6,c	;volatile
   737  0006BE                     
   738                           ;principal.c: 94:         PORTBbits.RB5 = 1;
   739  0006BE  8A81               	bsf	129,5,c	;volatile
   740  0006C0                     
   741                           ;principal.c: 95:         sprintf(estadoMes, "ENCHENDO");
   742  0006C0  0E37               	movlw	low _estadoMes
   743  0006C2  6E5D               	movwf	sprintf@s^0,c
   744  0006C4  0E00               	movlw	high _estadoMes
   745  0006C6  6E5E               	movwf	(sprintf@s+1)^0,c
   746  0006C8  0E26               	movlw	low STR_3
   747  0006CA  6E5F               	movwf	sprintf@fmt^0,c
   748  0006CC  0E06               	movlw	high STR_3
   749  0006CE  6E60               	movwf	(sprintf@fmt+1)^0,c
   750  0006D0  EC91  F008         	call	_sprintf	;wreg free
   751  0006D4                     
   752                           ;principal.c: 96:         PORTCbits.RC5 = 1;
   753  0006D4  8A82               	bsf	130,5,c	;volatile
   754  0006D6  EF3F  F003         	goto	l1684
   755  0006DA                     l1706:
   756  0006DA  0431               	decf	_enchendoDeAguaESabao^0,w,c
   757  0006DC  1032               	iorwf	(_enchendoDeAguaESabao+1)^0,w,c
   758  0006DE  A4D8               	btfss	status,2,c
   759  0006E0  EF74  F003         	goto	u811
   760  0006E4  EF76  F003         	goto	u810
   761  0006E8                     u811:
   762  0006E8  EFD4  F003         	goto	l1740
   763  0006EC                     u810:
   764  0006EC                     
   765                           ;principal.c: 100:         if ((PORTBbits.RB0 == 0) || (PORTBbits.RB1 == 0)) {
   766  0006EC  A081               	btfss	129,0,c	;volatile
   767  0006EE  EF7B  F003         	goto	u821
   768  0006F2  EF7D  F003         	goto	u820
   769  0006F6                     u821:
   770  0006F6  EF84  F003         	goto	l99
   771  0006FA                     u820:
   772  0006FA  B281               	btfsc	129,1,c	;volatile
   773  0006FC  EF82  F003         	goto	u831
   774  000700  EF84  F003         	goto	u830
   775  000704                     u831:
   776  000704  EF9D  F003         	goto	l97
   777  000708                     u830:
   778  000708                     l99:
   779                           
   780                           ;principal.c: 101:             PORTCbits.RC5 = 0;
   781  000708  9A82               	bcf	130,5,c	;volatile
   782  00070A                     
   783                           ;principal.c: 102:             enchendoDeAguaESabao = 0;
   784  00070A  0E00               	movlw	0
   785  00070C  6E32               	movwf	(_enchendoDeAguaESabao+1)^0,c
   786  00070E  0E00               	movlw	0
   787  000710  6E31               	movwf	_enchendoDeAguaESabao^0,c
   788                           
   789                           ;principal.c: 103:             escoamentoDoLiquidoSecante = 1;
   790  000712  0E00               	movlw	0
   791  000714  6E2A               	movwf	(_escoamentoDoLiquidoSecante+1)^0,c
   792  000716  0E01               	movlw	1
   793  000718  6E29               	movwf	_escoamentoDoLiquidoSecante^0,c
   794  00071A                     
   795                           ;principal.c: 104:             PORTBbits.RB6 = 0;
   796  00071A  9C81               	bcf	129,6,c	;volatile
   797  00071C                     
   798                           ;principal.c: 105:             PORTBbits.RB5 = 1;
   799  00071C  8A81               	bsf	129,5,c	;volatile
   800  00071E                     
   801                           ;principal.c: 106:             sprintf(estadoMes, "ESCOANDO");
   802  00071E  0E37               	movlw	low _estadoMes
   803  000720  6E5D               	movwf	sprintf@s^0,c
   804  000722  0E00               	movlw	high _estadoMes
   805  000724  6E5E               	movwf	(sprintf@s+1)^0,c
   806  000726  0E1D               	movlw	low STR_4
   807  000728  6E5F               	movwf	sprintf@fmt^0,c
   808  00072A  0E06               	movlw	high STR_4
   809  00072C  6E60               	movwf	(sprintf@fmt+1)^0,c
   810  00072E  EC91  F008         	call	_sprintf	;wreg free
   811  000732                     l1720:
   812                           
   813                           ;principal.c: 107:             escreve();
   814  000732  ECE6  F008         	call	_escreve	;wreg free
   815                           
   816                           ;principal.c: 108:         } else if (PORTBbits.RB2 == 0) {
   817  000736  EFE5  F004         	goto	l123
   818  00073A                     l97:
   819  00073A  B481               	btfsc	129,2,c	;volatile
   820  00073C  EFA2  F003         	goto	u841
   821  000740  EFA4  F003         	goto	u840
   822  000744                     u841:
   823  000744  EFE5  F004         	goto	l95
   824  000748                     u840:
   825  000748                     
   826                           ;principal.c: 109:             PORTCbits.RC5 = 0;
   827  000748  9A82               	bcf	130,5,c	;volatile
   828                           
   829                           ;principal.c: 110:             PORTCbits.RC2 = 1;
   830  00074A  8482               	bsf	130,2,c	;volatile
   831  00074C                     
   832                           ;principal.c: 111:             enchendoDeAguaESabao = 0;
   833  00074C  0E00               	movlw	0
   834  00074E  6E32               	movwf	(_enchendoDeAguaESabao+1)^0,c
   835  000750  0E00               	movlw	0
   836  000752  6E31               	movwf	_enchendoDeAguaESabao^0,c
   837  000754                     
   838                           ;principal.c: 112:             PORTBbits.RB4 = 1;
   839  000754  8881               	bsf	129,4,c	;volatile
   840  000756                     
   841                           ;principal.c: 113:             sprintf(estadoMes, "LAVANDO");
   842  000756  0E37               	movlw	low _estadoMes
   843  000758  6E5D               	movwf	sprintf@s^0,c
   844  00075A  0E00               	movlw	high _estadoMes
   845  00075C  6E5E               	movwf	(sprintf@s+1)^0,c
   846  00075E  0E37               	movlw	low STR_5
   847  000760  6E5F               	movwf	sprintf@fmt^0,c
   848  000762  0E06               	movlw	high STR_5
   849  000764  6E60               	movwf	(sprintf@fmt+1)^0,c
   850  000766  EC91  F008         	call	_sprintf	;wreg free
   851  00076A                     
   852                           ;principal.c: 114:             cicloDeLavagem = 1;
   853  00076A  0E00               	movlw	0
   854  00076C  6E30               	movwf	(_cicloDeLavagem+1)^0,c
   855  00076E  0E01               	movlw	1
   856  000770  6E2F               	movwf	_cicloDeLavagem^0,c
   857  000772                     
   858                           ;principal.c: 115:             escreve();
   859  000772  ECE6  F008         	call	_escreve	;wreg free
   860  000776                     
   861                           ;principal.c: 116:             _delay((unsigned long)((200)*(8000000/4000.0)));
   862  000776  0E03               	movlw	3
   863  000778  6E6C               	movwf	(??_estadosMaquina+1)^0,c
   864  00077A  0E08               	movlw	8
   865  00077C  6E6B               	movwf	??_estadosMaquina^0,c
   866  00077E  0E77               	movlw	119
   867  000780                     u1047:
   868  000780  2EE8               	decfsz	wreg,f,c
   869  000782  D7FE               	bra	u1047
   870  000784  2E6B               	decfsz	??_estadosMaquina^0,f,c
   871  000786  D7FC               	bra	u1047
   872  000788  2E6C               	decfsz	(??_estadosMaquina+1)^0,f,c
   873  00078A  D7FA               	bra	u1047
   874  00078C  F000               	nop	
   875  00078E                     
   876                           ;principal.c: 117:             statusTimer = timer(20);
   877  00078E  0E00               	movlw	0
   878  000790  6E4F               	movwf	(timer@min+1)^0,c
   879  000792  0E14               	movlw	20
   880  000794  6E4E               	movwf	timer@min^0,c
   881  000796  ECE6  F004         	call	_timer	;wreg free
   882  00079A  C04E  F035         	movff	?_timer,_statusTimer
   883  00079E  C04F  F036         	movff	?_timer+1,_statusTimer+1
   884  0007A2                     
   885                           ;principal.c: 118:             PORTCbits.RC2 = 0;
   886  0007A2  9482               	bcf	130,2,c	;volatile
   887  0007A4  EFE5  F004         	goto	l123
   888  0007A8                     l1740:
   889  0007A8  042F               	decf	_cicloDeLavagem^0,w,c
   890  0007AA  1030               	iorwf	(_cicloDeLavagem+1)^0,w,c
   891  0007AC  A4D8               	btfss	status,2,c
   892  0007AE  EFDB  F003         	goto	u851
   893  0007B2  EFDD  F003         	goto	u850
   894  0007B6                     u851:
   895  0007B6  EF25  F004         	goto	l1768
   896  0007BA                     u850:
   897  0007BA                     
   898                           ;principal.c: 121:         if ((PORTBbits.RB0 == 0) || (PORTBbits.RB1 == 0)) {
   899  0007BA  A081               	btfss	129,0,c	;volatile
   900  0007BC  EFE2  F003         	goto	u861
   901  0007C0  EFE4  F003         	goto	u860
   902  0007C4                     u861:
   903  0007C4  EFEB  F003         	goto	l1746
   904  0007C8                     u860:
   905  0007C8  B281               	btfsc	129,1,c	;volatile
   906  0007CA  EFE9  F003         	goto	u871
   907  0007CE  EFEB  F003         	goto	u870
   908  0007D2                     u871:
   909  0007D2  EF01  F004         	goto	l1756
   910  0007D6                     u870:
   911  0007D6                     l1746:
   912                           
   913                           ;principal.c: 122:             cicloDeLavagem = 0;
   914  0007D6  0E00               	movlw	0
   915  0007D8  6E30               	movwf	(_cicloDeLavagem+1)^0,c
   916  0007DA  0E00               	movlw	0
   917  0007DC  6E2F               	movwf	_cicloDeLavagem^0,c
   918                           
   919                           ;principal.c: 123:             escoamentoDoLiquidoSecante = 1;
   920  0007DE  0E00               	movlw	0
   921  0007E0  6E2A               	movwf	(_escoamentoDoLiquidoSecante+1)^0,c
   922  0007E2  0E01               	movlw	1
   923  0007E4  6E29               	movwf	_escoamentoDoLiquidoSecante^0,c
   924  0007E6                     
   925                           ;principal.c: 124:             PORTBbits.RB5 = 1;
   926  0007E6  8A81               	bsf	129,5,c	;volatile
   927  0007E8                     
   928                           ;principal.c: 125:             PORTBbits.RB6 = 0;
   929  0007E8  9C81               	bcf	129,6,c	;volatile
   930  0007EA                     
   931                           ;principal.c: 126:             sprintf(estadoMes, "ESCOANDO");
   932  0007EA  0E37               	movlw	low _estadoMes
   933  0007EC  6E5D               	movwf	sprintf@s^0,c
   934  0007EE  0E00               	movlw	high _estadoMes
   935  0007F0  6E5E               	movwf	(sprintf@s+1)^0,c
   936  0007F2  0E1D               	movlw	low STR_4
   937  0007F4  6E5F               	movwf	sprintf@fmt^0,c
   938  0007F6  0E06               	movlw	high STR_4
   939  0007F8  6E60               	movwf	(sprintf@fmt+1)^0,c
   940  0007FA  EC91  F008         	call	_sprintf	;wreg free
   941  0007FE  EF99  F003         	goto	l1720
   942  000802                     l1756:
   943  000802  0435               	decf	_statusTimer^0,w,c
   944  000804  1036               	iorwf	(_statusTimer+1)^0,w,c
   945  000806  A4D8               	btfss	status,2,c
   946  000808  EF08  F004         	goto	u881
   947  00080C  EF0A  F004         	goto	u880
   948  000810                     u881:
   949  000810  EFE5  F004         	goto	l95
   950  000814                     u880:
   951  000814                     
   952                           ;principal.c: 129:             cicloDeLavagem = 0;
   953  000814  0E00               	movlw	0
   954  000816  6E30               	movwf	(_cicloDeLavagem+1)^0,c
   955  000818  0E00               	movlw	0
   956  00081A  6E2F               	movwf	_cicloDeLavagem^0,c
   957                           
   958                           ;principal.c: 130:             drenarAgua = 1;
   959  00081C  0E00               	movlw	0
   960  00081E  6E2E               	movwf	(_drenarAgua+1)^0,c
   961  000820  0E01               	movlw	1
   962  000822  6E2D               	movwf	_drenarAgua^0,c
   963  000824                     
   964                           ;principal.c: 131:             PORTBbits.RB4 = 0;
   965  000824  9881               	bcf	129,4,c	;volatile
   966  000826                     
   967                           ;principal.c: 132:             sprintf(estadoMes, "DRENANDO");
   968  000826  0E37               	movlw	low _estadoMes
   969  000828  6E5D               	movwf	sprintf@s^0,c
   970  00082A  0E00               	movlw	high _estadoMes
   971  00082C  6E5E               	movwf	(sprintf@s+1)^0,c
   972  00082E  0E14               	movlw	low STR_7
   973  000830  6E5F               	movwf	sprintf@fmt^0,c
   974  000832  0E06               	movlw	high STR_7
   975  000834  6E60               	movwf	(sprintf@fmt+1)^0,c
   976  000836  EC91  F008         	call	_sprintf	;wreg free
   977  00083A                     
   978                           ;principal.c: 133:             escreve();
   979  00083A  ECE6  F008         	call	_escreve	;wreg free
   980  00083E                     
   981                           ;principal.c: 134:             statusTimer = 0;
   982  00083E  0E00               	movlw	0
   983  000840  6E36               	movwf	(_statusTimer+1)^0,c
   984  000842  0E00               	movlw	0
   985  000844  6E35               	movwf	_statusTimer^0,c
   986  000846  EFE5  F004         	goto	l123
   987  00084A                     l1768:
   988  00084A  042D               	decf	_drenarAgua^0,w,c
   989  00084C  102E               	iorwf	(_drenarAgua+1)^0,w,c
   990  00084E  A4D8               	btfss	status,2,c
   991  000850  EF2C  F004         	goto	u891
   992  000854  EF2E  F004         	goto	u890
   993  000858                     u891:
   994  000858  EF82  F004         	goto	l1798
   995  00085C                     u890:
   996  00085C                     
   997                           ;principal.c: 137:         if ((PORTBbits.RB2 == 0) && (PORTBbits.RB3 == 0)) {
   998  00085C  B481               	btfsc	129,2,c	;volatile
   999  00085E  EF33  F004         	goto	u901
  1000  000862  EF35  F004         	goto	u900
  1001  000866                     u901:
  1002  000866  EF5E  F004         	goto	l111
  1003  00086A                     u900:
  1004  00086A  B681               	btfsc	129,3,c	;volatile
  1005  00086C  EF3A  F004         	goto	u911
  1006  000870  EF3C  F004         	goto	u910
  1007  000874                     u911:
  1008  000874  EF5E  F004         	goto	l111
  1009  000878                     u910:
  1010  000878                     
  1011                           ;principal.c: 138:             drenarAgua = 0;
  1012  000878  0E00               	movlw	0
  1013  00087A  6E2E               	movwf	(_drenarAgua+1)^0,c
  1014  00087C  0E00               	movlw	0
  1015  00087E  6E2D               	movwf	_drenarAgua^0,c
  1016                           
  1017                           ;principal.c: 139:             liquidoSecante = 1;
  1018  000880  0E00               	movlw	0
  1019  000882  6E2C               	movwf	(_liquidoSecante+1)^0,c
  1020  000884  0E01               	movlw	1
  1021  000886  6E2B               	movwf	_liquidoSecante^0,c
  1022  000888                     
  1023                           ;principal.c: 140:             PORTBbits.RB6 = 0;
  1024  000888  9C81               	bcf	129,6,c	;volatile
  1025  00088A                     
  1026                           ;principal.c: 141:             PORTBbits.RB5 = 0;
  1027  00088A  9A81               	bcf	129,5,c	;volatile
  1028  00088C                     
  1029                           ;principal.c: 142:             sprintf(estadoMes, "LIQUIDO");
  1030  00088C  0E37               	movlw	low _estadoMes
  1031  00088E  6E5D               	movwf	sprintf@s^0,c
  1032  000890  0E00               	movlw	high _estadoMes
  1033  000892  6E5E               	movwf	(sprintf@s+1)^0,c
  1034  000894  0E2F               	movlw	low STR_8
  1035  000896  6E5F               	movwf	sprintf@fmt^0,c
  1036  000898  0E06               	movlw	high STR_8
  1037  00089A  6E60               	movwf	(sprintf@fmt+1)^0,c
  1038  00089C  EC91  F008         	call	_sprintf	;wreg free
  1039  0008A0                     
  1040                           ;principal.c: 143:             escreve();
  1041  0008A0  ECE6  F008         	call	_escreve	;wreg free
  1042  0008A4                     
  1043                           ;principal.c: 144:             statusTimer = timer(2);
  1044  0008A4  0E00               	movlw	0
  1045  0008A6  6E4F               	movwf	(timer@min+1)^0,c
  1046  0008A8  0E02               	movlw	2
  1047  0008AA  6E4E               	movwf	timer@min^0,c
  1048  0008AC  ECE6  F004         	call	_timer	;wreg free
  1049  0008B0  C04E  F035         	movff	?_timer,_statusTimer
  1050  0008B4  C04F  F036         	movff	?_timer+1,_statusTimer+1
  1051                           
  1052                           ;principal.c: 145:         } else if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0)) {
  1053  0008B8  EFE5  F004         	goto	l123
  1054  0008BC                     l111:
  1055  0008BC  A281               	btfss	129,1,c	;volatile
  1056  0008BE  EF63  F004         	goto	u921
  1057  0008C2  EF65  F004         	goto	u920
  1058  0008C6                     u921:
  1059  0008C6  EF6C  F004         	goto	l1788
  1060  0008CA                     u920:
  1061  0008CA  B081               	btfsc	129,0,c	;volatile
  1062  0008CC  EF6A  F004         	goto	u931
  1063  0008D0  EF6C  F004         	goto	u930
  1064  0008D4                     u931:
  1065  0008D4  EFE5  F004         	goto	l95
  1066  0008D8                     u930:
  1067  0008D8                     l1788:
  1068                           
  1069                           ;principal.c: 146:             drenarAgua = 0;
  1070  0008D8  0E00               	movlw	0
  1071  0008DA  6E2E               	movwf	(_drenarAgua+1)^0,c
  1072  0008DC  0E00               	movlw	0
  1073  0008DE  6E2D               	movwf	_drenarAgua^0,c
  1074                           
  1075                           ;principal.c: 147:             escoamentoDoLiquidoSecante = 1;
  1076  0008E0  0E00               	movlw	0
  1077  0008E2  6E2A               	movwf	(_escoamentoDoLiquidoSecante+1)^0,c
  1078  0008E4  0E01               	movlw	1
  1079  0008E6  6E29               	movwf	_escoamentoDoLiquidoSecante^0,c
  1080  0008E8                     
  1081                           ;principal.c: 148:             PORTBbits.RB6 = 0;
  1082  0008E8  9C81               	bcf	129,6,c	;volatile
  1083  0008EA                     
  1084                           ;principal.c: 149:             PORTBbits.RB5 = 1;
  1085  0008EA  8A81               	bsf	129,5,c	;volatile
  1086  0008EC                     
  1087                           ;principal.c: 150:             sprintf(estadoMes, "ESCOANDO");
  1088  0008EC  0E37               	movlw	low _estadoMes
  1089  0008EE  6E5D               	movwf	sprintf@s^0,c
  1090  0008F0  0E00               	movlw	high _estadoMes
  1091  0008F2  6E5E               	movwf	(sprintf@s+1)^0,c
  1092  0008F4  0E1D               	movlw	low STR_4
  1093  0008F6  6E5F               	movwf	sprintf@fmt^0,c
  1094  0008F8  0E06               	movlw	high STR_4
  1095  0008FA  6E60               	movwf	(sprintf@fmt+1)^0,c
  1096  0008FC  EC91  F008         	call	_sprintf	;wreg free
  1097  000900  EF99  F003         	goto	l1720
  1098  000904                     l1798:
  1099  000904  042B               	decf	_liquidoSecante^0,w,c
  1100  000906  102C               	iorwf	(_liquidoSecante+1)^0,w,c
  1101  000908  A4D8               	btfss	status,2,c
  1102  00090A  EF89  F004         	goto	u941
  1103  00090E  EF8B  F004         	goto	u940
  1104  000912                     u941:
  1105  000912  EFBC  F004         	goto	l1816
  1106  000916                     u940:
  1107  000916  A281               	btfss	129,1,c	;volatile
  1108  000918  EF90  F004         	goto	u951
  1109  00091C  EF92  F004         	goto	u950
  1110  000920                     u951:
  1111  000920  EFA2  F004         	goto	l1806
  1112  000924                     u950:
  1113  000924  A081               	btfss	129,0,c	;volatile
  1114  000926  EF97  F004         	goto	u961
  1115  00092A  EF99  F004         	goto	u960
  1116  00092E                     u961:
  1117  00092E  EFA2  F004         	goto	l1806
  1118  000932                     u960:
  1119  000932  0435               	decf	_statusTimer^0,w,c
  1120  000934  1036               	iorwf	(_statusTimer+1)^0,w,c
  1121  000936  A4D8               	btfss	status,2,c
  1122  000938  EFA0  F004         	goto	u971
  1123  00093C  EFA2  F004         	goto	u970
  1124  000940                     u971:
  1125  000940  EFBC  F004         	goto	l1816
  1126  000944                     u970:
  1127  000944                     l1806:
  1128                           
  1129                           ;principal.c: 154:        (PORTBbits.RB1 == 0 || PORTBbits.RB0 == 0 || statusTimer == 1)
      +                          ) {;principal.c: 155:         statusTimer = 0;
  1130  000944  0E00               	movlw	0
  1131  000946  6E36               	movwf	(_statusTimer+1)^0,c
  1132  000948  0E00               	movlw	0
  1133  00094A  6E35               	movwf	_statusTimer^0,c
  1134                           
  1135                           ;principal.c: 156:         liquidoSecante = 0;
  1136  00094C  0E00               	movlw	0
  1137  00094E  6E2C               	movwf	(_liquidoSecante+1)^0,c
  1138  000950  0E00               	movlw	0
  1139  000952  6E2B               	movwf	_liquidoSecante^0,c
  1140                           
  1141                           ;principal.c: 157:         escoamentoDoLiquidoSecante = 1;
  1142  000954  0E00               	movlw	0
  1143  000956  6E2A               	movwf	(_escoamentoDoLiquidoSecante+1)^0,c
  1144  000958  0E01               	movlw	1
  1145  00095A  6E29               	movwf	_escoamentoDoLiquidoSecante^0,c
  1146  00095C                     
  1147                           ;principal.c: 158:         PORTBbits.RB6 = 0;
  1148  00095C  9C81               	bcf	129,6,c	;volatile
  1149  00095E                     
  1150                           ;principal.c: 159:         PORTBbits.RB5 = 1;
  1151  00095E  8A81               	bsf	129,5,c	;volatile
  1152  000960                     
  1153                           ;principal.c: 160:         sprintf(estadoMes, "ESCOANDO");
  1154  000960  0E37               	movlw	low _estadoMes
  1155  000962  6E5D               	movwf	sprintf@s^0,c
  1156  000964  0E00               	movlw	high _estadoMes
  1157  000966  6E5E               	movwf	(sprintf@s+1)^0,c
  1158  000968  0E1D               	movlw	low STR_4
  1159  00096A  6E5F               	movwf	sprintf@fmt^0,c
  1160  00096C  0E06               	movlw	high STR_4
  1161  00096E  6E60               	movwf	(sprintf@fmt+1)^0,c
  1162  000970  EC91  F008         	call	_sprintf	;wreg free
  1163  000974  EF99  F003         	goto	l1720
  1164  000978                     l1816:
  1165  000978  0429               	decf	_escoamentoDoLiquidoSecante^0,w,c
  1166  00097A  102A               	iorwf	(_escoamentoDoLiquidoSecante+1)^0,w,c
  1167  00097C  A4D8               	btfss	status,2,c
  1168  00097E  EFC3  F004         	goto	u981
  1169  000982  EFC5  F004         	goto	u980
  1170  000986                     u981:
  1171  000986  EFE5  F004         	goto	l123
  1172  00098A                     u980:
  1173  00098A                     
  1174                           ;principal.c: 163:         if ((PORTBbits.RB3 == 0)) {
  1175  00098A  B681               	btfsc	129,3,c	;volatile
  1176  00098C  EFCA  F004         	goto	u991
  1177  000990  EFCC  F004         	goto	u990
  1178  000994                     u991:
  1179  000994  EFE5  F004         	goto	l95
  1180  000998                     u990:
  1181  000998                     
  1182                           ;principal.c: 164:             escoamentoDoLiquidoSecante = 0;
  1183  000998  0E00               	movlw	0
  1184  00099A  6E2A               	movwf	(_escoamentoDoLiquidoSecante+1)^0,c
  1185  00099C  0E00               	movlw	0
  1186  00099E  6E29               	movwf	_escoamentoDoLiquidoSecante^0,c
  1187                           
  1188                           ;principal.c: 165:             desligado = 1;
  1189  0009A0  0E00               	movlw	0
  1190  0009A2  6E34               	movwf	(_desligado+1)^0,c
  1191  0009A4  0E01               	movlw	1
  1192  0009A6  6E33               	movwf	_desligado^0,c
  1193  0009A8                     
  1194                           ;principal.c: 166:             PORTBbits.RB7 = 0;
  1195  0009A8  9E81               	bcf	129,7,c	;volatile
  1196  0009AA                     
  1197                           ;principal.c: 167:             PORTBbits.RB5 = 0;
  1198  0009AA  9A81               	bcf	129,5,c	;volatile
  1199  0009AC                     
  1200                           ;principal.c: 168:             tocaBuzzer();
  1201  0009AC  EC6A  F008         	call	_tocaBuzzer	;wreg free
  1202  0009B0                     
  1203                           ;principal.c: 169:             PORTBbits.RB4 = 0;
  1204  0009B0  9881               	bcf	129,4,c	;volatile
  1205  0009B2                     
  1206                           ;principal.c: 170:             sprintf(estadoMes, "DESLIGADA");
  1207  0009B2  0E37               	movlw	low _estadoMes
  1208  0009B4  6E5D               	movwf	sprintf@s^0,c
  1209  0009B6  0E00               	movlw	high _estadoMes
  1210  0009B8  6E5E               	movwf	(sprintf@s+1)^0,c
  1211  0009BA  0E01               	movlw	low STR_11
  1212  0009BC  6E5F               	movwf	sprintf@fmt^0,c
  1213  0009BE  0E06               	movlw	high STR_11
  1214  0009C0  6E60               	movwf	(sprintf@fmt+1)^0,c
  1215  0009C2  EC91  F008         	call	_sprintf	;wreg free
  1216  0009C6  EF99  F003         	goto	l1720
  1217  0009CA                     l95:
  1218  0009CA                     l123:
  1219  0009CA  0012               	return		;funcret
  1220  0009CC                     __end_of_estadosMaquina:
  1221                           	callstack 0
  1222                           
  1223 ;; *************** function _tocaBuzzer *****************
  1224 ;; Defined at:
  1225 ;;		line 30 in file "principal.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  i               2    1[COMRAM] int 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1239 ;;      Params:         0       0       0       0       0       0       0
  1240 ;;      Locals:         2       0       0       0       0       0       0
  1241 ;;      Temps:          1       0       0       0       0       0       0
  1242 ;;      Totals:         3       0       0       0       0       0       0
  1243 ;;Total ram usage:        3 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_estadosMaquina
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text3
  1253  0010D4                     __ptext3:
  1254                           	callstack 0
  1255  0010D4                     _tocaBuzzer:
  1256                           	callstack 29
  1257  0010D4                     
  1258                           ;principal.c: 31:     for (int i = 0; i < 5; i++) {
  1259  0010D4  0E00               	movlw	0
  1260  0010D6  6E48               	movwf	(tocaBuzzer@i+1)^0,c
  1261  0010D8  0E00               	movlw	0
  1262  0010DA  6E47               	movwf	tocaBuzzer@i^0,c
  1263  0010DC                     l75:
  1264                           
  1265                           ;principal.c: 32:         PORTCbits.RC1 = 1;
  1266  0010DC  8282               	bsf	130,1,c	;volatile
  1267  0010DE                     
  1268                           ;principal.c: 33:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1269  0010DE  0E1A               	movlw	26
  1270  0010E0  6E46               	movwf	??_tocaBuzzer^0,c
  1271  0010E2  0EF8               	movlw	248
  1272  0010E4                     u1057:
  1273  0010E4  2EE8               	decfsz	wreg,f,c
  1274  0010E6  D7FE               	bra	u1057
  1275  0010E8  2E46               	decfsz	??_tocaBuzzer^0,f,c
  1276  0010EA  D7FC               	bra	u1057
  1277  0010EC  D000               	nop2	
  1278  0010EE                     
  1279                           ;principal.c: 34:         PORTCbits.RC1 = 0;
  1280  0010EE  9282               	bcf	130,1,c	;volatile
  1281                           
  1282                           ;principal.c: 35:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1283  0010F0  0E1A               	movlw	26
  1284  0010F2  6E46               	movwf	??_tocaBuzzer^0,c
  1285  0010F4  0EF8               	movlw	248
  1286  0010F6                     u1067:
  1287  0010F6  2EE8               	decfsz	wreg,f,c
  1288  0010F8  D7FE               	bra	u1067
  1289  0010FA  2E46               	decfsz	??_tocaBuzzer^0,f,c
  1290  0010FC  D7FC               	bra	u1067
  1291  0010FE  D000               	nop2	
  1292  001100                     
  1293                           ;principal.c: 36:     }
  1294  001100  4A47               	infsnz	tocaBuzzer@i^0,f,c
  1295  001102  2A48               	incf	(tocaBuzzer@i+1)^0,f,c
  1296  001104  BE48               	btfsc	(tocaBuzzer@i+1)^0,7,c
  1297  001106  EF8E  F008         	goto	u231
  1298  00110A  5048               	movf	(tocaBuzzer@i+1)^0,w,c
  1299  00110C  E109               	bnz	u230
  1300  00110E  0E05               	movlw	5
  1301  001110  5C47               	subwf	tocaBuzzer@i^0,w,c
  1302  001112  A0D8               	btfss	status,0,c
  1303  001114  EF8E  F008         	goto	u231
  1304  001118  EF90  F008         	goto	u230
  1305  00111C                     u231:
  1306  00111C  EF6E  F008         	goto	l75
  1307  001120                     u230:
  1308  001120  0012               	return		;funcret
  1309  001122                     __end_of_tocaBuzzer:
  1310                           	callstack 0
  1311                           
  1312 ;; *************** function _timer *****************
  1313 ;; Defined at:
  1314 ;;		line 39 in file "principal.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  min             2    8[COMRAM] int 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  j               1   15[COMRAM] unsigned char 
  1319 ;;  i               1   17[COMRAM] unsigned char 
  1320 ;;  k               1   16[COMRAM] unsigned char 
  1321 ;;  minD            1   14[COMRAM] unsigned char 
  1322 ;;  minU            1   13[COMRAM] unsigned char 
  1323 ;;  segD            1   12[COMRAM] unsigned char 
  1324 ;;  segU            1   11[COMRAM] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  2    8[COMRAM] int 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1334 ;;      Params:         2       0       0       0       0       0       0
  1335 ;;      Locals:         7       0       0       0       0       0       0
  1336 ;;      Temps:          1       0       0       0       0       0       0
  1337 ;;      Totals:        10       0       0       0       0       0       0
  1338 ;;Total ram usage:       10 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    1
  1341 ;; This function calls:
  1342 ;;		___awdiv
  1343 ;;		___awmod
  1344 ;;		_display7s
  1345 ;; This function is called by:
  1346 ;;		_estadosMaquina
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text4
  1351  0009CC                     __ptext4:
  1352                           	callstack 0
  1353  0009CC                     _timer:
  1354                           	callstack 28
  1355  0009CC                     
  1356                           ;principal.c: 41:     unsigned char segU, segD, minU, minD;;principal.c: 43:     TRISA =
      +                           0x00;
  1357  0009CC  0E00               	movlw	0
  1358  0009CE  6E92               	movwf	146,c	;volatile
  1359                           
  1360                           ;principal.c: 44:     TRISD = 0x00;
  1361  0009D0  0E00               	movlw	0
  1362  0009D2  6E95               	movwf	149,c	;volatile
  1363                           
  1364                           ;principal.c: 45:     ADCON1 = 0x0F;
  1365  0009D4  0E0F               	movlw	15
  1366  0009D6  6EC1               	movwf	193,c	;volatile
  1367  0009D8                     
  1368                           ;principal.c: 47:     for (unsigned char k = min; k > 0; k--) {
  1369  0009D8  C04E  F056         	movff	timer@min,timer@k
  1370  0009DC  5056               	movf	timer@k^0,w,c
  1371  0009DE  A4D8               	btfss	status,2,c
  1372  0009E0  EFF4  F004         	goto	u731
  1373  0009E4  EFF6  F004         	goto	u730
  1374  0009E8                     u731:
  1375  0009E8  EFF8  F004         	goto	l1604
  1376  0009EC                     u730:
  1377  0009EC  EF83  F005         	goto	l1652
  1378  0009F0                     l1604:
  1379                           
  1380                           ;principal.c: 49:         minU = (k - 1) % 10;
  1381  0009F0  0EFF               	movlw	255
  1382  0009F2  2456               	addwf	timer@k^0,w,c
  1383  0009F4  6E46               	movwf	___awmod@dividend^0,c
  1384  0009F6  6A47               	clrf	(___awmod@dividend+1)^0,c
  1385  0009F8  0EFF               	movlw	255
  1386  0009FA  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1387  0009FC  0E00               	movlw	0
  1388  0009FE  6E49               	movwf	(___awmod@divisor+1)^0,c
  1389  000A00  0E0A               	movlw	10
  1390  000A02  6E48               	movwf	___awmod@divisor^0,c
  1391  000A04  EC4A  F007         	call	___awmod	;wreg free
  1392  000A08  5046               	movf	?___awmod^0,w,c
  1393  000A0A  6E53               	movwf	timer@minU^0,c
  1394                           
  1395                           ;principal.c: 50:         minD = (k - 1) / 10;
  1396  000A0C  0EFF               	movlw	255
  1397  000A0E  2456               	addwf	timer@k^0,w,c
  1398  000A10  6E46               	movwf	___awdiv@dividend^0,c
  1399  000A12  6A47               	clrf	(___awdiv@dividend+1)^0,c
  1400  000A14  0EFF               	movlw	255
  1401  000A16  2247               	addwfc	(___awdiv@dividend+1)^0,f,c
  1402  000A18  0E00               	movlw	0
  1403  000A1A  6E49               	movwf	(___awdiv@divisor+1)^0,c
  1404  000A1C  0E0A               	movlw	10
  1405  000A1E  6E48               	movwf	___awdiv@divisor^0,c
  1406  000A20  ECE8  F006         	call	___awdiv	;wreg free
  1407  000A24  5046               	movf	?___awdiv^0,w,c
  1408  000A26  6E54               	movwf	timer@minD^0,c
  1409  000A28                     
  1410                           ;principal.c: 51:         for (unsigned char i = 60; i > 0; i--) {
  1411  000A28  0E3C               	movlw	60
  1412  000A2A  6E57               	movwf	timer@i^0,c
  1413  000A2C                     l1612:
  1414                           
  1415                           ;principal.c: 52:             segU = (i - 1) % 10;
  1416  000A2C  0EFF               	movlw	255
  1417  000A2E  2457               	addwf	timer@i^0,w,c
  1418  000A30  6E46               	movwf	___awmod@dividend^0,c
  1419  000A32  6A47               	clrf	(___awmod@dividend+1)^0,c
  1420  000A34  0EFF               	movlw	255
  1421  000A36  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1422  000A38  0E00               	movlw	0
  1423  000A3A  6E49               	movwf	(___awmod@divisor+1)^0,c
  1424  000A3C  0E0A               	movlw	10
  1425  000A3E  6E48               	movwf	___awmod@divisor^0,c
  1426  000A40  EC4A  F007         	call	___awmod	;wreg free
  1427  000A44  5046               	movf	?___awmod^0,w,c
  1428  000A46  6E51               	movwf	timer@segU^0,c
  1429                           
  1430                           ;principal.c: 53:             segD = (i - 1) / 10;
  1431  000A48  0EFF               	movlw	255
  1432  000A4A  2457               	addwf	timer@i^0,w,c
  1433  000A4C  6E46               	movwf	___awdiv@dividend^0,c
  1434  000A4E  6A47               	clrf	(___awdiv@dividend+1)^0,c
  1435  000A50  0EFF               	movlw	255
  1436  000A52  2247               	addwfc	(___awdiv@dividend+1)^0,f,c
  1437  000A54  0E00               	movlw	0
  1438  000A56  6E49               	movwf	(___awdiv@divisor+1)^0,c
  1439  000A58  0E0A               	movlw	10
  1440  000A5A  6E48               	movwf	___awdiv@divisor^0,c
  1441  000A5C  ECE8  F006         	call	___awdiv	;wreg free
  1442  000A60  5046               	movf	?___awdiv^0,w,c
  1443  000A62  6E52               	movwf	timer@segD^0,c
  1444  000A64                     
  1445                           ;principal.c: 54:             for (unsigned char j = 0; j < 30; j++) {
  1446  000A64  0E00               	movlw	0
  1447  000A66  6E55               	movwf	timer@j^0,c
  1448  000A68                     l1620:
  1449                           
  1450                           ;principal.c: 55:                 PORTA = 0x20;
  1451  000A68  0E20               	movlw	32
  1452  000A6A  6E80               	movwf	128,c	;volatile
  1453  000A6C                     
  1454                           ;principal.c: 56:                 PORTD = display7s(segU);
  1455  000A6C  5051               	movf	timer@segU^0,w,c
  1456  000A6E  EC8A  F005         	call	_display7s
  1457  000A72  6E83               	movwf	131,c	;volatile
  1458  000A74                     
  1459                           ;principal.c: 57:                 _delay((unsigned long)((1)*(8000000/4000.0)));
  1460  000A74  0E03               	movlw	3
  1461  000A76  6E50               	movwf	??_timer^0,c
  1462  000A78  0E98               	movlw	152
  1463  000A7A                     u1077:
  1464  000A7A  2EE8               	decfsz	wreg,f,c
  1465  000A7C  D7FE               	bra	u1077
  1466  000A7E  2E50               	decfsz	??_timer^0,f,c
  1467  000A80  D7FC               	bra	u1077
  1468  000A82                     
  1469                           ;principal.c: 58:                 PORTA = 0x10;
  1470  000A82  0E10               	movlw	16
  1471  000A84  6E80               	movwf	128,c	;volatile
  1472  000A86                     
  1473                           ;principal.c: 59:                 PORTD = display7s(segD);
  1474  000A86  5052               	movf	timer@segD^0,w,c
  1475  000A88  EC8A  F005         	call	_display7s
  1476  000A8C  6E83               	movwf	131,c	;volatile
  1477                           
  1478                           ;principal.c: 60:                 _delay((unsigned long)((1)*(8000000/4000.0)));
  1479  000A8E  0E03               	movlw	3
  1480  000A90  6E50               	movwf	??_timer^0,c
  1481  000A92  0E98               	movlw	152
  1482  000A94                     u1087:
  1483  000A94  2EE8               	decfsz	wreg,f,c
  1484  000A96  D7FE               	bra	u1087
  1485  000A98  2E50               	decfsz	??_timer^0,f,c
  1486  000A9A  D7FC               	bra	u1087
  1487  000A9C                     
  1488                           ;principal.c: 61:                 PORTA = 0x08;
  1489  000A9C  0E08               	movlw	8
  1490  000A9E  6E80               	movwf	128,c	;volatile
  1491  000AA0                     
  1492                           ;principal.c: 62:                 PORTD = display7s(minU);
  1493  000AA0  5053               	movf	timer@minU^0,w,c
  1494  000AA2  EC8A  F005         	call	_display7s
  1495  000AA6  6E83               	movwf	131,c	;volatile
  1496  000AA8                     
  1497                           ;principal.c: 63:                 _delay((unsigned long)((1)*(8000000/4000.0)));
  1498  000AA8  0E03               	movlw	3
  1499  000AAA  6E50               	movwf	??_timer^0,c
  1500  000AAC  0E98               	movlw	152
  1501  000AAE                     u1097:
  1502  000AAE  2EE8               	decfsz	wreg,f,c
  1503  000AB0  D7FE               	bra	u1097
  1504  000AB2  2E50               	decfsz	??_timer^0,f,c
  1505  000AB4  D7FC               	bra	u1097
  1506  000AB6                     
  1507                           ;principal.c: 64:                 PORTA = 0x04;
  1508  000AB6  0E04               	movlw	4
  1509  000AB8  6E80               	movwf	128,c	;volatile
  1510                           
  1511                           ;principal.c: 65:                 PORTD = display7s(minD);
  1512  000ABA  5054               	movf	timer@minD^0,w,c
  1513  000ABC  EC8A  F005         	call	_display7s
  1514  000AC0  6E83               	movwf	131,c	;volatile
  1515  000AC2                     
  1516                           ;principal.c: 66:                 _delay((unsigned long)((1)*(8000000/4000.0)));
  1517  000AC2  0E03               	movlw	3
  1518  000AC4  6E50               	movwf	??_timer^0,c
  1519  000AC6  0E98               	movlw	152
  1520  000AC8                     u1107:
  1521  000AC8  2EE8               	decfsz	wreg,f,c
  1522  000ACA  D7FE               	bra	u1107
  1523  000ACC  2E50               	decfsz	??_timer^0,f,c
  1524  000ACE  D7FC               	bra	u1107
  1525  000AD0                     
  1526                           ;principal.c: 67:             }
  1527  000AD0  2A55               	incf	timer@j^0,f,c
  1528  000AD2  0E1D               	movlw	29
  1529  000AD4  6455               	cpfsgt	timer@j^0,c
  1530  000AD6  EF6F  F005         	goto	u741
  1531  000ADA  EF71  F005         	goto	u740
  1532  000ADE                     u741:
  1533  000ADE  EF34  F005         	goto	l1620
  1534  000AE2                     u740:
  1535  000AE2                     
  1536                           ;principal.c: 68:         }
  1537  000AE2  0657               	decf	timer@i^0,f,c
  1538  000AE4  5057               	movf	timer@i^0,w,c
  1539  000AE6  A4D8               	btfss	status,2,c
  1540  000AE8  EF78  F005         	goto	u751
  1541  000AEC  EF7A  F005         	goto	u750
  1542  000AF0                     u751:
  1543  000AF0  EF16  F005         	goto	l1612
  1544  000AF4                     u750:
  1545  000AF4                     
  1546                           ;principal.c: 69:     }
  1547  000AF4  0656               	decf	timer@k^0,f,c
  1548  000AF6  5056               	movf	timer@k^0,w,c
  1549  000AF8  A4D8               	btfss	status,2,c
  1550  000AFA  EF81  F005         	goto	u761
  1551  000AFE  EF83  F005         	goto	u760
  1552  000B02                     u761:
  1553  000B02  EFF8  F004         	goto	l1604
  1554  000B06                     u760:
  1555  000B06                     l1652:
  1556                           
  1557                           ;principal.c: 70:     PORTA = 0;
  1558  000B06  0E00               	movlw	0
  1559  000B08  6E80               	movwf	128,c	;volatile
  1560                           
  1561                           ;principal.c: 71:     return 1;
  1562  000B0A  0E00               	movlw	0
  1563  000B0C  6E4F               	movwf	(?_timer+1)^0,c
  1564  000B0E  0E01               	movlw	1
  1565  000B10  6E4E               	movwf	?_timer^0,c
  1566  000B12  0012               	return		;funcret
  1567  000B14                     __end_of_timer:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function _display7s *****************
  1571 ;; Defined at:
  1572 ;;		line 35 in file "display7s.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  v               1    wreg     unsigned char 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;  v               1    2[COMRAM] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      unsigned char 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1586 ;;      Params:         0       0       0       0       0       0       0
  1587 ;;      Locals:         1       0       0       0       0       0       0
  1588 ;;      Temps:          2       0       0       0       0       0       0
  1589 ;;      Totals:         3       0       0       0       0       0       0
  1590 ;;Total ram usage:        3 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_timer
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text5
  1600  000B14                     __ptext5:
  1601                           	callstack 0
  1602  000B14                     _display7s:
  1603                           	callstack 28
  1604                           
  1605                           ;incstack = 0
  1606                           ;display7s@v stored from wreg
  1607  000B14  6E48               	movwf	display7s@v^0,c
  1608  000B16                     
  1609                           ;display7s.c: 35: unsigned char display7s(unsigned char v);display7s.c: 36: {;display7s.
      +                          c: 37:   switch(v)
  1610  000B16  EFC0  F005         	goto	l1060
  1611  000B1A                     l990:
  1612                           
  1613                           ;display7s.c: 40:       return 0x3F;
  1614  000B1A  0E3F               	movlw	63
  1615  000B1C  EF0D  F006         	goto	l136
  1616  000B20                     l994:
  1617                           
  1618                           ;display7s.c: 42:       return 0x06;
  1619  000B20  0E06               	movlw	6
  1620  000B22  EF0D  F006         	goto	l136
  1621  000B26                     l998:
  1622                           
  1623                           ;display7s.c: 44:       return 0x5B;
  1624  000B26  0E5B               	movlw	91
  1625  000B28  EF0D  F006         	goto	l136
  1626  000B2C                     l1002:
  1627                           
  1628                           ;display7s.c: 46:       return 0x4F;
  1629  000B2C  0E4F               	movlw	79
  1630  000B2E  EF0D  F006         	goto	l136
  1631  000B32                     l1006:
  1632                           
  1633                           ;display7s.c: 48:       return 0x66;
  1634  000B32  0E66               	movlw	102
  1635  000B34  EF0D  F006         	goto	l136
  1636  000B38                     l1010:
  1637                           
  1638                           ;display7s.c: 50:       return 0x6D;
  1639  000B38  0E6D               	movlw	109
  1640  000B3A  EF0D  F006         	goto	l136
  1641  000B3E                     l1014:
  1642                           
  1643                           ;display7s.c: 52:       return 0x7D;
  1644  000B3E  0E7D               	movlw	125
  1645  000B40  EF0D  F006         	goto	l136
  1646  000B44                     l1018:
  1647                           
  1648                           ;display7s.c: 54:       return 0x07;
  1649  000B44  0E07               	movlw	7
  1650  000B46  EF0D  F006         	goto	l136
  1651  000B4A                     l1022:
  1652                           
  1653                           ;display7s.c: 56:       return 0x7F;
  1654  000B4A  0E7F               	movlw	127
  1655  000B4C  EF0D  F006         	goto	l136
  1656  000B50                     l1026:
  1657                           
  1658                           ;display7s.c: 58:       return 0x6F;
  1659  000B50  0E6F               	movlw	111
  1660  000B52  EF0D  F006         	goto	l136
  1661  000B56                     l1030:
  1662                           
  1663                           ;display7s.c: 60:       return 0x77;
  1664  000B56  0E77               	movlw	119
  1665  000B58  EF0D  F006         	goto	l136
  1666  000B5C                     l1034:
  1667                           
  1668                           ;display7s.c: 62:       return 0x7c;
  1669  000B5C  0E7C               	movlw	124
  1670  000B5E  EF0D  F006         	goto	l136
  1671  000B62                     l1038:
  1672                           
  1673                           ;display7s.c: 64:       return 0x58;
  1674  000B62  0E58               	movlw	88
  1675  000B64  EF0D  F006         	goto	l136
  1676  000B68                     l1042:
  1677                           
  1678                           ;display7s.c: 66:       return 0x5E;
  1679  000B68  0E5E               	movlw	94
  1680  000B6A  EF0D  F006         	goto	l136
  1681  000B6E                     l1046:
  1682                           
  1683                           ;display7s.c: 68:       return 0x79;
  1684  000B6E  0E79               	movlw	121
  1685  000B70  EF0D  F006         	goto	l136
  1686  000B74                     l1050:
  1687                           
  1688                           ;display7s.c: 70:       return 0x71;
  1689  000B74  0E71               	movlw	113
  1690  000B76  EF0D  F006         	goto	l136
  1691  000B7A                     l1054:
  1692                           
  1693                           ;display7s.c: 72:       return 0;
  1694  000B7A  0E00               	movlw	0
  1695  000B7C  EF0D  F006         	goto	l136
  1696  000B80                     l1060:
  1697  000B80  5048               	movf	display7s@v^0,w,c
  1698  000B82  6E46               	movwf	??_display7s^0,c
  1699  000B84  6A47               	clrf	(??_display7s+1)^0,c
  1700                           
  1701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1702                           ; Switch size 1, requested type "simple"
  1703                           ; Number of cases is 1, Range of values is 0 to 0
  1704                           ; switch strategies available:
  1705                           ; Name         Instructions Cycles
  1706                           ; simple_byte            4     3 (average)
  1707                           ;	Chosen strategy is simple_byte
  1708  000B86  5047               	movf	(??_display7s+1)^0,w,c
  1709  000B88  0A00               	xorlw	0	; case 0
  1710  000B8A  B4D8               	btfsc	status,2,c
  1711  000B8C  EFCA  F005         	goto	l1864
  1712  000B90  EFBD  F005         	goto	l1054
  1713  000B94                     l1864:
  1714                           
  1715                           ; Switch size 1, requested type "simple"
  1716                           ; Number of cases is 16, Range of values is 0 to 15
  1717                           ; switch strategies available:
  1718                           ; Name         Instructions Cycles
  1719                           ; simple_byte           49    25 (average)
  1720                           ;	Chosen strategy is simple_byte
  1721  000B94  5046               	movf	??_display7s^0,w,c
  1722  000B96  0A00               	xorlw	0	; case 0
  1723  000B98  B4D8               	btfsc	status,2,c
  1724  000B9A  EF8D  F005         	goto	l990
  1725  000B9E  0A01               	xorlw	1	; case 1
  1726  000BA0  B4D8               	btfsc	status,2,c
  1727  000BA2  EF90  F005         	goto	l994
  1728  000BA6  0A03               	xorlw	3	; case 2
  1729  000BA8  B4D8               	btfsc	status,2,c
  1730  000BAA  EF93  F005         	goto	l998
  1731  000BAE  0A01               	xorlw	1	; case 3
  1732  000BB0  B4D8               	btfsc	status,2,c
  1733  000BB2  EF96  F005         	goto	l1002
  1734  000BB6  0A07               	xorlw	7	; case 4
  1735  000BB8  B4D8               	btfsc	status,2,c
  1736  000BBA  EF99  F005         	goto	l1006
  1737  000BBE  0A01               	xorlw	1	; case 5
  1738  000BC0  B4D8               	btfsc	status,2,c
  1739  000BC2  EF9C  F005         	goto	l1010
  1740  000BC6  0A03               	xorlw	3	; case 6
  1741  000BC8  B4D8               	btfsc	status,2,c
  1742  000BCA  EF9F  F005         	goto	l1014
  1743  000BCE  0A01               	xorlw	1	; case 7
  1744  000BD0  B4D8               	btfsc	status,2,c
  1745  000BD2  EFA2  F005         	goto	l1018
  1746  000BD6  0A0F               	xorlw	15	; case 8
  1747  000BD8  B4D8               	btfsc	status,2,c
  1748  000BDA  EFA5  F005         	goto	l1022
  1749  000BDE  0A01               	xorlw	1	; case 9
  1750  000BE0  B4D8               	btfsc	status,2,c
  1751  000BE2  EFA8  F005         	goto	l1026
  1752  000BE6  0A03               	xorlw	3	; case 10
  1753  000BE8  B4D8               	btfsc	status,2,c
  1754  000BEA  EFAB  F005         	goto	l1030
  1755  000BEE  0A01               	xorlw	1	; case 11
  1756  000BF0  B4D8               	btfsc	status,2,c
  1757  000BF2  EFAE  F005         	goto	l1034
  1758  000BF6  0A07               	xorlw	7	; case 12
  1759  000BF8  B4D8               	btfsc	status,2,c
  1760  000BFA  EFB1  F005         	goto	l1038
  1761  000BFE  0A01               	xorlw	1	; case 13
  1762  000C00  B4D8               	btfsc	status,2,c
  1763  000C02  EFB4  F005         	goto	l1042
  1764  000C06  0A03               	xorlw	3	; case 14
  1765  000C08  B4D8               	btfsc	status,2,c
  1766  000C0A  EFB7  F005         	goto	l1046
  1767  000C0E  0A01               	xorlw	1	; case 15
  1768  000C10  B4D8               	btfsc	status,2,c
  1769  000C12  EFBA  F005         	goto	l1050
  1770  000C16  EFBD  F005         	goto	l1054
  1771  000C1A                     l136:
  1772  000C1A  0012               	return		;funcret
  1773  000C1C                     __end_of_display7s:
  1774                           	callstack 0
  1775                           
  1776 ;; *************** function ___awmod *****************
  1777 ;; Defined at:
  1778 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  dividend        2    0[COMRAM] int 
  1781 ;;  divisor         2    2[COMRAM] int 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  sign            1    5[COMRAM] unsigned char 
  1784 ;;  counter         1    4[COMRAM] unsigned char 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  2    0[COMRAM] int 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1794 ;;      Params:         4       0       0       0       0       0       0
  1795 ;;      Locals:         2       0       0       0       0       0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0
  1797 ;;      Totals:         6       0       0       0       0       0       0
  1798 ;;Total ram usage:        6 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_timer
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text6
  1808  000E94                     __ptext6:
  1809                           	callstack 0
  1810  000E94                     ___awmod:
  1811                           	callstack 28
  1812  000E94  0E00               	movlw	0
  1813  000E96  6E4B               	movwf	___awmod@sign^0,c
  1814  000E98  BE47               	btfsc	(___awmod@dividend+1)^0,7,c
  1815  000E9A  EF53  F007         	goto	u660
  1816  000E9E  EF51  F007         	goto	u661
  1817  000EA2                     u661:
  1818  000EA2  EF59  F007         	goto	l1562
  1819  000EA6                     u660:
  1820  000EA6  6C46               	negf	___awmod@dividend^0,c
  1821  000EA8  1E47               	comf	(___awmod@dividend+1)^0,f,c
  1822  000EAA  B0D8               	btfsc	status,0,c
  1823  000EAC  2A47               	incf	(___awmod@dividend+1)^0,f,c
  1824  000EAE  0E01               	movlw	1
  1825  000EB0  6E4B               	movwf	___awmod@sign^0,c
  1826  000EB2                     l1562:
  1827  000EB2  BE49               	btfsc	(___awmod@divisor+1)^0,7,c
  1828  000EB4  EF60  F007         	goto	u670
  1829  000EB8  EF5E  F007         	goto	u671
  1830  000EBC                     u671:
  1831  000EBC  EF64  F007         	goto	l1566
  1832  000EC0                     u670:
  1833  000EC0  6C48               	negf	___awmod@divisor^0,c
  1834  000EC2  1E49               	comf	(___awmod@divisor+1)^0,f,c
  1835  000EC4  B0D8               	btfsc	status,0,c
  1836  000EC6  2A49               	incf	(___awmod@divisor+1)^0,f,c
  1837  000EC8                     l1566:
  1838  000EC8  5048               	movf	___awmod@divisor^0,w,c
  1839  000ECA  1049               	iorwf	(___awmod@divisor+1)^0,w,c
  1840  000ECC  B4D8               	btfsc	status,2,c
  1841  000ECE  EF6B  F007         	goto	u681
  1842  000ED2  EF6D  F007         	goto	u680
  1843  000ED6                     u681:
  1844  000ED6  EF91  F007         	goto	l1582
  1845  000EDA                     u680:
  1846  000EDA  0E01               	movlw	1
  1847  000EDC  6E4A               	movwf	___awmod@counter^0,c
  1848  000EDE  EF75  F007         	goto	l1572
  1849  000EE2                     l1570:
  1850  000EE2  90D8               	bcf	status,0,c
  1851  000EE4  3648               	rlcf	___awmod@divisor^0,f,c
  1852  000EE6  3649               	rlcf	(___awmod@divisor+1)^0,f,c
  1853  000EE8  2A4A               	incf	___awmod@counter^0,f,c
  1854  000EEA                     l1572:
  1855  000EEA  AE49               	btfss	(___awmod@divisor+1)^0,7,c
  1856  000EEC  EF7A  F007         	goto	u691
  1857  000EF0  EF7C  F007         	goto	u690
  1858  000EF4                     u691:
  1859  000EF4  EF71  F007         	goto	l1570
  1860  000EF8                     u690:
  1861  000EF8                     l1574:
  1862  000EF8  5048               	movf	___awmod@divisor^0,w,c
  1863  000EFA  5C46               	subwf	___awmod@dividend^0,w,c
  1864  000EFC  5049               	movf	(___awmod@divisor+1)^0,w,c
  1865  000EFE  5847               	subwfb	(___awmod@dividend+1)^0,w,c
  1866  000F00  A0D8               	btfss	status,0,c
  1867  000F02  EF85  F007         	goto	u701
  1868  000F06  EF87  F007         	goto	u700
  1869  000F0A                     u701:
  1870  000F0A  EF8B  F007         	goto	l1578
  1871  000F0E                     u700:
  1872  000F0E  5048               	movf	___awmod@divisor^0,w,c
  1873  000F10  5E46               	subwf	___awmod@dividend^0,f,c
  1874  000F12  5049               	movf	(___awmod@divisor+1)^0,w,c
  1875  000F14  5A47               	subwfb	(___awmod@dividend+1)^0,f,c
  1876  000F16                     l1578:
  1877  000F16  90D8               	bcf	status,0,c
  1878  000F18  3249               	rrcf	(___awmod@divisor+1)^0,f,c
  1879  000F1A  3248               	rrcf	___awmod@divisor^0,f,c
  1880  000F1C  2E4A               	decfsz	___awmod@counter^0,f,c
  1881  000F1E  EF7C  F007         	goto	l1574
  1882  000F22                     l1582:
  1883  000F22  504B               	movf	___awmod@sign^0,w,c
  1884  000F24  B4D8               	btfsc	status,2,c
  1885  000F26  EF97  F007         	goto	u711
  1886  000F2A  EF99  F007         	goto	u710
  1887  000F2E                     u711:
  1888  000F2E  EF9D  F007         	goto	l1586
  1889  000F32                     u710:
  1890  000F32  6C46               	negf	___awmod@dividend^0,c
  1891  000F34  1E47               	comf	(___awmod@dividend+1)^0,f,c
  1892  000F36  B0D8               	btfsc	status,0,c
  1893  000F38  2A47               	incf	(___awmod@dividend+1)^0,f,c
  1894  000F3A                     l1586:
  1895  000F3A  C046  F046         	movff	___awmod@dividend,?___awmod
  1896  000F3E  C047  F047         	movff	___awmod@dividend+1,?___awmod+1
  1897  000F42  0012               	return		;funcret
  1898  000F44                     __end_of___awmod:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function ___awdiv *****************
  1902 ;; Defined at:
  1903 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  dividend        2    0[COMRAM] int 
  1906 ;;  divisor         2    2[COMRAM] int 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;  quotient        2    6[COMRAM] int 
  1909 ;;  sign            1    5[COMRAM] unsigned char 
  1910 ;;  counter         1    4[COMRAM] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  2    0[COMRAM] int 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1920 ;;      Params:         4       0       0       0       0       0       0
  1921 ;;      Locals:         4       0       0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0
  1923 ;;      Totals:         8       0       0       0       0       0       0
  1924 ;;Total ram usage:        8 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_timer
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text7
  1934  000DD0                     __ptext7:
  1935                           	callstack 0
  1936  000DD0                     ___awdiv:
  1937                           	callstack 28
  1938  000DD0  0E00               	movlw	0
  1939  000DD2  6E4B               	movwf	___awdiv@sign^0,c
  1940  000DD4  BE49               	btfsc	(___awdiv@divisor+1)^0,7,c
  1941  000DD6  EFF1  F006         	goto	u600
  1942  000DDA  EFEF  F006         	goto	u601
  1943  000DDE                     u601:
  1944  000DDE  EFF7  F006         	goto	l1518
  1945  000DE2                     u600:
  1946  000DE2  6C48               	negf	___awdiv@divisor^0,c
  1947  000DE4  1E49               	comf	(___awdiv@divisor+1)^0,f,c
  1948  000DE6  B0D8               	btfsc	status,0,c
  1949  000DE8  2A49               	incf	(___awdiv@divisor+1)^0,f,c
  1950  000DEA  0E01               	movlw	1
  1951  000DEC  6E4B               	movwf	___awdiv@sign^0,c
  1952  000DEE                     l1518:
  1953  000DEE  BE47               	btfsc	(___awdiv@dividend+1)^0,7,c
  1954  000DF0  EFFE  F006         	goto	u610
  1955  000DF4  EFFC  F006         	goto	u611
  1956  000DF8                     u611:
  1957  000DF8  EF04  F007         	goto	l1524
  1958  000DFC                     u610:
  1959  000DFC  6C46               	negf	___awdiv@dividend^0,c
  1960  000DFE  1E47               	comf	(___awdiv@dividend+1)^0,f,c
  1961  000E00  B0D8               	btfsc	status,0,c
  1962  000E02  2A47               	incf	(___awdiv@dividend+1)^0,f,c
  1963  000E04  0E01               	movlw	1
  1964  000E06  1A4B               	xorwf	___awdiv@sign^0,f,c
  1965  000E08                     l1524:
  1966  000E08  0E00               	movlw	0
  1967  000E0A  6E4D               	movwf	(___awdiv@quotient+1)^0,c
  1968  000E0C  0E00               	movlw	0
  1969  000E0E  6E4C               	movwf	___awdiv@quotient^0,c
  1970  000E10  5048               	movf	___awdiv@divisor^0,w,c
  1971  000E12  1049               	iorwf	(___awdiv@divisor+1)^0,w,c
  1972  000E14  B4D8               	btfsc	status,2,c
  1973  000E16  EF0F  F007         	goto	u621
  1974  000E1A  EF11  F007         	goto	u620
  1975  000E1E                     u621:
  1976  000E1E  EF39  F007         	goto	l1546
  1977  000E22                     u620:
  1978  000E22  0E01               	movlw	1
  1979  000E24  6E4A               	movwf	___awdiv@counter^0,c
  1980  000E26  EF19  F007         	goto	l1532
  1981  000E2A                     l1530:
  1982  000E2A  90D8               	bcf	status,0,c
  1983  000E2C  3648               	rlcf	___awdiv@divisor^0,f,c
  1984  000E2E  3649               	rlcf	(___awdiv@divisor+1)^0,f,c
  1985  000E30  2A4A               	incf	___awdiv@counter^0,f,c
  1986  000E32                     l1532:
  1987  000E32  AE49               	btfss	(___awdiv@divisor+1)^0,7,c
  1988  000E34  EF1E  F007         	goto	u631
  1989  000E38  EF20  F007         	goto	u630
  1990  000E3C                     u631:
  1991  000E3C  EF15  F007         	goto	l1530
  1992  000E40                     u630:
  1993  000E40                     l1534:
  1994  000E40  90D8               	bcf	status,0,c
  1995  000E42  364C               	rlcf	___awdiv@quotient^0,f,c
  1996  000E44  364D               	rlcf	(___awdiv@quotient+1)^0,f,c
  1997  000E46  5048               	movf	___awdiv@divisor^0,w,c
  1998  000E48  5C46               	subwf	___awdiv@dividend^0,w,c
  1999  000E4A  5049               	movf	(___awdiv@divisor+1)^0,w,c
  2000  000E4C  5847               	subwfb	(___awdiv@dividend+1)^0,w,c
  2001  000E4E  A0D8               	btfss	status,0,c
  2002  000E50  EF2C  F007         	goto	u641
  2003  000E54  EF2E  F007         	goto	u640
  2004  000E58                     u641:
  2005  000E58  EF33  F007         	goto	l1542
  2006  000E5C                     u640:
  2007  000E5C  5048               	movf	___awdiv@divisor^0,w,c
  2008  000E5E  5E46               	subwf	___awdiv@dividend^0,f,c
  2009  000E60  5049               	movf	(___awdiv@divisor+1)^0,w,c
  2010  000E62  5A47               	subwfb	(___awdiv@dividend+1)^0,f,c
  2011  000E64  804C               	bsf	___awdiv@quotient^0,0,c
  2012  000E66                     l1542:
  2013  000E66  90D8               	bcf	status,0,c
  2014  000E68  3249               	rrcf	(___awdiv@divisor+1)^0,f,c
  2015  000E6A  3248               	rrcf	___awdiv@divisor^0,f,c
  2016  000E6C  2E4A               	decfsz	___awdiv@counter^0,f,c
  2017  000E6E  EF20  F007         	goto	l1534
  2018  000E72                     l1546:
  2019  000E72  504B               	movf	___awdiv@sign^0,w,c
  2020  000E74  B4D8               	btfsc	status,2,c
  2021  000E76  EF3F  F007         	goto	u651
  2022  000E7A  EF41  F007         	goto	u650
  2023  000E7E                     u651:
  2024  000E7E  EF45  F007         	goto	l1550
  2025  000E82                     u650:
  2026  000E82  6C4C               	negf	___awdiv@quotient^0,c
  2027  000E84  1E4D               	comf	(___awdiv@quotient+1)^0,f,c
  2028  000E86  B0D8               	btfsc	status,0,c
  2029  000E88  2A4D               	incf	(___awdiv@quotient+1)^0,f,c
  2030  000E8A                     l1550:
  2031  000E8A  C04C  F046         	movff	___awdiv@quotient,?___awdiv
  2032  000E8E  C04D  F047         	movff	___awdiv@quotient+1,?___awdiv+1
  2033  000E92  0012               	return		;funcret
  2034  000E94                     __end_of___awdiv:
  2035                           	callstack 0
  2036                           
  2037 ;; *************** function _sprintf *****************
  2038 ;; Defined at:
  2039 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  s               2   23[COMRAM] PTR unsigned char 
  2042 ;;		 -> estadoMes(15), 
  2043 ;;  fmt             2   25[COMRAM] PTR const unsigned char 
  2044 ;;		 -> STR_11(10), STR_10(9), STR_9(9), STR_8(8), 
  2045 ;;		 -> STR_7(9), STR_6(9), STR_5(8), STR_4(9), 
  2046 ;;		 -> STR_3(9), STR_2(7), 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  f               6   31[COMRAM] struct _IO_FILE
  2049 ;;  ap              2   29[COMRAM] PTR void [1]
  2050 ;;		 -> ?_sprintf(2), 
  2051 ;;  ret             2    0        int 
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  2   23[COMRAM] int 
  2054 ;; Registers used:
  2055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2061 ;;      Params:         4       0       0       0       0       0       0
  2062 ;;      Locals:        10       0       0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0
  2064 ;;      Totals:        14       0       0       0       0       0       0
  2065 ;;Total ram usage:       14 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    4
  2068 ;; This function calls:
  2069 ;;		_vfprintf
  2070 ;; This function is called by:
  2071 ;;		_estadosMaquina
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           	psect	text8
  2076  001122                     __ptext8:
  2077                           	callstack 0
  2078  001122                     _sprintf:
  2079                           	callstack 25
  2080  001122  0E61               	movlw	low (?_sprintf+4)
  2081  001124  6E63               	movwf	sprintf@ap^0,c
  2082  001126  0E00               	movlw	high (?_sprintf+4)
  2083  001128  6E64               	movwf	(sprintf@ap+1)^0,c
  2084  00112A  C05D  F065         	movff	sprintf@s,sprintf@f
  2085  00112E  C05E  F066         	movff	sprintf@s+1,sprintf@f+1
  2086  001132  0E00               	movlw	0
  2087  001134  6E68               	movwf	(sprintf@f+3)^0,c
  2088  001136  0E00               	movlw	0
  2089  001138  6E67               	movwf	(sprintf@f+2)^0,c
  2090  00113A  0E00               	movlw	0
  2091  00113C  6E6A               	movwf	(sprintf@f+5)^0,c
  2092  00113E  0E00               	movlw	0
  2093  001140  6E69               	movwf	(sprintf@f+4)^0,c
  2094  001142  0E65               	movlw	low sprintf@f
  2095  001144  6E55               	movwf	vfprintf@fp^0,c
  2096  001146  0E00               	movlw	high sprintf@f
  2097  001148  6E56               	movwf	(vfprintf@fp+1)^0,c
  2098  00114A  C05F  F057         	movff	sprintf@fmt,vfprintf@fmt
  2099  00114E  C060  F058         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2100  001152  0E63               	movlw	low sprintf@ap
  2101  001154  6E59               	movwf	vfprintf@ap^0,c
  2102  001156  0E00               	movlw	high sprintf@ap
  2103  001158  6E5A               	movwf	(vfprintf@ap+1)^0,c
  2104  00115A  EC0F  F008         	call	_vfprintf	;wreg free
  2105  00115E  5067               	movf	(sprintf@f+2)^0,w,c
  2106  001160  245D               	addwf	sprintf@s^0,w,c
  2107  001162  6ED9               	movwf	fsr2l,c
  2108  001164  5068               	movf	(sprintf@f+3)^0,w,c
  2109  001166  205E               	addwfc	(sprintf@s+1)^0,w,c
  2110  001168  6EDA               	movwf	fsr2h,c
  2111  00116A  0E00               	movlw	0
  2112  00116C  6EDF               	movwf	indf2,c
  2113  00116E  0012               	return		;funcret
  2114  001170                     __end_of_sprintf:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function _vfprintf *****************
  2118 ;; Defined at:
  2119 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  2122 ;;		 -> sprintf@f(6), 
  2123 ;;  fmt             2   17[COMRAM] PTR const unsigned char 
  2124 ;;		 -> STR_11(10), STR_10(9), STR_9(9), STR_8(8), 
  2125 ;;		 -> STR_7(9), STR_6(9), STR_5(8), STR_4(9), 
  2126 ;;		 -> STR_3(9), STR_2(7), 
  2127 ;;  ap              2   19[COMRAM] PTR PTR void 
  2128 ;;		 -> sprintf@ap(2), 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  cfmt            2   21[COMRAM] PTR unsigned char 
  2131 ;;		 -> STR_11(10), STR_10(9), STR_9(9), STR_8(8), 
  2132 ;;		 -> STR_7(9), STR_6(9), STR_5(8), STR_4(9), 
  2133 ;;		 -> STR_3(9), STR_2(7), 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  2   15[COMRAM] int 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2143 ;;      Params:         6       0       0       0       0       0       0
  2144 ;;      Locals:         2       0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0
  2146 ;;      Totals:         8       0       0       0       0       0       0
  2147 ;;Total ram usage:        8 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    3
  2150 ;; This function calls:
  2151 ;;		_vfpfcnvrt
  2152 ;; This function is called by:
  2153 ;;		_sprintf
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text9
  2158  00101E                     __ptext9:
  2159                           	callstack 0
  2160  00101E                     _vfprintf:
  2161                           	callstack 25
  2162  00101E                     
  2163                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2164  00101E  C057  F05B         	movff	vfprintf@fmt,vfprintf@cfmt
  2165  001022  C058  F05C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2166  001026                     
  2167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  2168  001026  0E00               	movlw	0
  2169  001028  6E22               	movwf	(_nout+1)^0,c
  2170  00102A  0E00               	movlw	0
  2171  00102C  6E21               	movwf	_nout^0,c
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2174  00102E  EF2B  F008         	goto	l1596
  2175  001032                     l1594:
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2178  001032  C055  F04F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2179  001036  C056  F050         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2180  00103A  0E5B               	movlw	low vfprintf@cfmt
  2181  00103C  6E51               	movwf	vfpfcnvrt@fmt^0,c
  2182  00103E  0E00               	movlw	high vfprintf@cfmt
  2183  001040  6E52               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2184  001042  C059  F053         	movff	vfprintf@ap,vfpfcnvrt@ap
  2185  001046  C05A  F054         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2186  00104A  EC0E  F006         	call	_vfpfcnvrt	;wreg free
  2187  00104E  504F               	movf	?_vfpfcnvrt^0,w,c
  2188  001050  2621               	addwf	_nout^0,f,c
  2189  001052  5050               	movf	(?_vfpfcnvrt+1)^0,w,c
  2190  001054  2222               	addwfc	(_nout+1)^0,f,c
  2191  001056                     l1596:
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2194  001056  C05B  FFF6         	movff	vfprintf@cfmt,tblptrl
  2195  00105A  C05C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2196  00105E                     	if	0	;tblptru may be non-zero
  2197  00105E                     	endif
  2198  00105E                     	if	0	;tblptru may be non-zero
  2199  00105E                     	endif
  2200  00105E  0008               	tblrd		*
  2201  001060  50F5               	movf	tablat,w,c
  2202  001062  0900               	iorlw	0
  2203  001064  A4D8               	btfss	status,2,c
  2204  001066  EF37  F008         	goto	u721
  2205  00106A  EF39  F008         	goto	u720
  2206  00106E                     u721:
  2207  00106E  EF19  F008         	goto	l1594
  2208  001072                     u720:
  2209  001072                     
  2210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  2211  001072  C021  F055         	movff	_nout,?_vfprintf
  2212  001076  C022  F056         	movff	_nout+1,?_vfprintf+1
  2213  00107A  0012               	return		;funcret
  2214  00107C                     __end_of_vfprintf:
  2215                           	callstack 0
  2216                           
  2217 ;; *************** function _vfpfcnvrt *****************
  2218 ;; Defined at:
  2219 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  2222 ;;		 -> sprintf@f(6), 
  2223 ;;  fmt             2   11[COMRAM] PTR PTR unsigned char 
  2224 ;;		 -> vfprintf@cfmt(2), 
  2225 ;;  ap              2   13[COMRAM] PTR PTR void 
  2226 ;;		 -> sprintf@ap(2), 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  llu             8    0        unsigned long long 
  2229 ;;  ll              8    0        long long 
  2230 ;;  f               4    0        long long 
  2231 ;;  vp              3    0        PTR void 
  2232 ;;  ct              3    0        unsigned char [3]
  2233 ;;  cp              3    0        PTR unsigned char 
  2234 ;;  i               2    0        int 
  2235 ;;  done            2    0        int 
  2236 ;;  c               1    0        unsigned char 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  2    9[COMRAM] int 
  2239 ;; Registers used:
  2240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2246 ;;      Params:         6       0       0       0       0       0       0
  2247 ;;      Locals:         0       0       0       0       0       0       0
  2248 ;;      Temps:          0       0       0       0       0       0       0
  2249 ;;      Totals:         6       0       0       0       0       0       0
  2250 ;;Total ram usage:        6 bytes
  2251 ;; Hardware stack levels used:    1
  2252 ;; Hardware stack levels required when called:    2
  2253 ;; This function calls:
  2254 ;;		_fputc
  2255 ;; This function is called by:
  2256 ;;		_vfprintf
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           	psect	text10
  2261  000C1C                     __ptext10:
  2262                           	callstack 0
  2263  000C1C                     _vfpfcnvrt:
  2264                           	callstack 25
  2265  000C1C                     
  2266                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  2267  000C1C  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2268  000C20  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2269  000C24  CFDE FFF6          	movff	postinc2,tblptrl
  2270  000C28  CFDD FFF7          	movff	postdec2,tblptrh
  2271  000C2C                     	if	0	;tblptru may be non-zero
  2272  000C2C                     	endif
  2273  000C2C                     	if	0	;tblptru may be non-zero
  2274  000C2C                     	endif
  2275  000C2C  0008               	tblrd		*
  2276  000C2E  50F5               	movf	tablat,w,c
  2277  000C30  0A25               	xorlw	37
  2278  000C32  A4D8               	btfss	status,2,c
  2279  000C34  EF1E  F006         	goto	u551
  2280  000C38  EF20  F006         	goto	u550
  2281  000C3C                     u551:
  2282  000C3C  EF67  F006         	goto	l1494
  2283  000C40                     u550:
  2284  000C40                     
  2285                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  2286  000C40  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2287  000C44  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2288  000C48  2ADE               	incf	postinc2,f,c
  2289  000C4A  0E00               	movlw	0
  2290  000C4C  22DD               	addwfc	postdec2,f,c
  2291  000C4E                     
  2292                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  2293  000C4E  0E00               	movlw	0
  2294  000C50  6E24               	movwf	(_width+1)^0,c
  2295  000C52  0E00               	movlw	0
  2296  000C54  6E23               	movwf	_width^0,c
  2297  000C56  C023  F027         	movff	_width,_flags
  2298  000C5A  C024  F028         	movff	_width+1,_flags+1
  2299  000C5E                     
  2300                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  2301  000C5E  6825               	setf	_prec^0,c
  2302  000C60  6826               	setf	(_prec+1)^0,c
  2303  000C62                     
  2304                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2305  000C62  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2306  000C66  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2307  000C6A  CFDE FFF6          	movff	postinc2,tblptrl
  2308  000C6E  CFDD FFF7          	movff	postdec2,tblptrh
  2309  000C72                     	if	0	;tblptru may be non-zero
  2310  000C72                     	endif
  2311  000C72                     	if	0	;tblptru may be non-zero
  2312  000C72                     	endif
  2313  000C72  0008               	tblrd		*
  2314  000C74  50F5               	movf	tablat,w,c
  2315  000C76  0A25               	xorlw	37
  2316  000C78  A4D8               	btfss	status,2,c
  2317  000C7A  EF41  F006         	goto	u561
  2318  000C7E  EF43  F006         	goto	u560
  2319  000C82                     u561:
  2320  000C82  EF5A  F006         	goto	l1488
  2321  000C86                     u560:
  2322  000C86                     
  2323                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2324  000C86  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2325  000C8A  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2326  000C8E  2ADE               	incf	postinc2,f,c
  2327  000C90  0E00               	movlw	0
  2328  000C92  22DD               	addwfc	postdec2,f,c
  2329  000C94                     
  2330                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2331  000C94  0E00               	movlw	0
  2332  000C96  6E47               	movwf	(fputc@c+1)^0,c
  2333  000C98  0E25               	movlw	37
  2334  000C9A  6E46               	movwf	fputc@c^0,c
  2335  000C9C  C04F  F048         	movff	vfpfcnvrt@fp,fputc@fp
  2336  000CA0  C050  F049         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2337  000CA4  EC83  F006         	call	_fputc	;wreg free
  2338  000CA8                     l1484:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2341  000CA8  0E00               	movlw	0
  2342  000CAA  6E50               	movwf	(?_vfpfcnvrt+1)^0,c
  2343  000CAC  0E01               	movlw	1
  2344  000CAE  6E4F               	movwf	?_vfpfcnvrt^0,c
  2345  000CB0  EF82  F006         	goto	l867
  2346  000CB4                     l1488:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2349  000CB4  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2350  000CB8  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2351  000CBC  2ADE               	incf	postinc2,f,c
  2352  000CBE  0E00               	movlw	0
  2353  000CC0  22DD               	addwfc	postdec2,f,c
  2354  000CC2                     
  2355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2356  000CC2  0E00               	movlw	0
  2357  000CC4  6E50               	movwf	(?_vfpfcnvrt+1)^0,c
  2358  000CC6  0E00               	movlw	0
  2359  000CC8  6E4F               	movwf	?_vfpfcnvrt^0,c
  2360  000CCA  EF82  F006         	goto	l867
  2361  000CCE                     l1494:
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2364  000CCE  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2365  000CD2  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2366  000CD6  CFDE FFF6          	movff	postinc2,tblptrl
  2367  000CDA  CFDD FFF7          	movff	postdec2,tblptrh
  2368  000CDE                     	if	0	;tblptru may be non-zero
  2369  000CDE                     	endif
  2370  000CDE                     	if	0	;tblptru may be non-zero
  2371  000CDE                     	endif
  2372  000CDE  0008               	tblrd		*
  2373  000CE0  50F5               	movf	tablat,w,c
  2374  000CE2  6E46               	movwf	fputc@c^0,c
  2375  000CE4  6A47               	clrf	(fputc@c+1)^0,c
  2376  000CE6  C04F  F048         	movff	vfpfcnvrt@fp,fputc@fp
  2377  000CEA  C050  F049         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2378  000CEE  EC83  F006         	call	_fputc	;wreg free
  2379  000CF2                     
  2380                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2381  000CF2  C051  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2382  000CF6  C052  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2383  000CFA  2ADE               	incf	postinc2,f,c
  2384  000CFC  0E00               	movlw	0
  2385  000CFE  22DD               	addwfc	postdec2,f,c
  2386  000D00  EF54  F006         	goto	l1484
  2387  000D04                     l867:
  2388  000D04  0012               	return		;funcret
  2389  000D06                     __end_of_vfpfcnvrt:
  2390                           	callstack 0
  2391                           
  2392 ;; *************** function _fputc *****************
  2393 ;; Defined at:
  2394 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  c               2    0[COMRAM] int 
  2397 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2398 ;;		 -> sprintf@f(6), 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  2    0[COMRAM] int 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2410 ;;      Params:         4       0       0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0
  2412 ;;      Temps:          5       0       0       0       0       0       0
  2413 ;;      Totals:         9       0       0       0       0       0       0
  2414 ;;Total ram usage:        9 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    1
  2417 ;; This function calls:
  2418 ;;		_putch
  2419 ;; This function is called by:
  2420 ;;		_vfpfcnvrt
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text11
  2425  000D06                     __ptext11:
  2426                           	callstack 0
  2427  000D06                     _fputc:
  2428                           	callstack 25
  2429  000D06  5048               	movf	fputc@fp^0,w,c
  2430  000D08  1049               	iorwf	(fputc@fp+1)^0,w,c
  2431  000D0A  B4D8               	btfsc	status,2,c
  2432  000D0C  EF8A  F006         	goto	u511
  2433  000D10  EF8C  F006         	goto	u510
  2434  000D14                     u511:
  2435  000D14  EF95  F006         	goto	l1460
  2436  000D18                     u510:
  2437  000D18  5048               	movf	fputc@fp^0,w,c
  2438  000D1A  1049               	iorwf	(fputc@fp+1)^0,w,c
  2439  000D1C  A4D8               	btfss	status,2,c
  2440  000D1E  EF93  F006         	goto	u521
  2441  000D22  EF95  F006         	goto	u520
  2442  000D26                     u521:
  2443  000D26  EF9A  F006         	goto	l1462
  2444  000D2A                     u520:
  2445  000D2A                     l1460:
  2446  000D2A  5046               	movf	fputc@c^0,w,c
  2447  000D2C  EC0B  F009         	call	_putch
  2448  000D30  EFE7  F006         	goto	l885
  2449  000D34                     l1462:
  2450  000D34  EE20 F004          	lfsr	2,4
  2451  000D38  5048               	movf	fputc@fp^0,w,c
  2452  000D3A  26D9               	addwf	fsr2l,f,c
  2453  000D3C  5049               	movf	(fputc@fp+1)^0,w,c
  2454  000D3E  22DA               	addwfc	fsr2h,f,c
  2455  000D40  50DE               	movf	postinc2,w,c
  2456  000D42  10DE               	iorwf	postinc2,w,c
  2457  000D44  B4D8               	btfsc	status,2,c
  2458  000D46  EFA7  F006         	goto	u531
  2459  000D4A  EFA9  F006         	goto	u530
  2460  000D4E                     u531:
  2461  000D4E  EFC4  F006         	goto	l1466
  2462  000D52                     u530:
  2463  000D52  EE20 F004          	lfsr	2,4
  2464  000D56  5048               	movf	fputc@fp^0,w,c
  2465  000D58  26D9               	addwf	fsr2l,f,c
  2466  000D5A  5049               	movf	(fputc@fp+1)^0,w,c
  2467  000D5C  22DA               	addwfc	fsr2h,f,c
  2468  000D5E  EE10 F002          	lfsr	1,2
  2469  000D62  5048               	movf	fputc@fp^0,w,c
  2470  000D64  26E1               	addwf	fsr1l,f,c
  2471  000D66  5049               	movf	(fputc@fp+1)^0,w,c
  2472  000D68  22E2               	addwfc	fsr1h,f,c
  2473  000D6A  50DE               	movf	postinc2,w,c
  2474  000D6C  5CE6               	subwf	postinc1,w,c
  2475  000D6E  50E6               	movf	postinc1,w,c
  2476  000D70  0A80               	xorlw	128
  2477  000D72  6E4E               	movwf	(??_fputc+4)^0,c
  2478  000D74  50DE               	movf	postinc2,w,c
  2479  000D76  0A80               	xorlw	128
  2480  000D78  584E               	subwfb	(??_fputc+4)^0,w,c
  2481  000D7A  B0D8               	btfsc	status,0,c
  2482  000D7C  EFC2  F006         	goto	u541
  2483  000D80  EFC4  F006         	goto	u540
  2484  000D84                     u541:
  2485  000D84  EFE7  F006         	goto	l885
  2486  000D88                     u540:
  2487  000D88                     l1466:
  2488  000D88  EE20 F002          	lfsr	2,2
  2489  000D8C  5048               	movf	fputc@fp^0,w,c
  2490  000D8E  26D9               	addwf	fsr2l,f,c
  2491  000D90  5049               	movf	(fputc@fp+1)^0,w,c
  2492  000D92  22DA               	addwfc	fsr2h,f,c
  2493  000D94  CFDE F04A          	movff	postinc2,??_fputc
  2494  000D98  CFDD F04B          	movff	postdec2,??_fputc+1
  2495  000D9C  C048  FFD9         	movff	fputc@fp,fsr2l
  2496  000DA0  C049  FFDA         	movff	fputc@fp+1,fsr2h
  2497  000DA4  CFDE F04C          	movff	postinc2,??_fputc+2
  2498  000DA8  CFDD F04D          	movff	postdec2,??_fputc+3
  2499  000DAC  504A               	movf	??_fputc^0,w,c
  2500  000DAE  244C               	addwf	(??_fputc+2)^0,w,c
  2501  000DB0  6ED9               	movwf	fsr2l,c
  2502  000DB2  504B               	movf	(??_fputc+1)^0,w,c
  2503  000DB4  204D               	addwfc	(??_fputc+3)^0,w,c
  2504  000DB6  6EDA               	movwf	fsr2h,c
  2505  000DB8  C046  FFDF         	movff	fputc@c,indf2
  2506  000DBC  EE20 F002          	lfsr	2,2
  2507  000DC0  5048               	movf	fputc@fp^0,w,c
  2508  000DC2  26D9               	addwf	fsr2l,f,c
  2509  000DC4  5049               	movf	(fputc@fp+1)^0,w,c
  2510  000DC6  22DA               	addwfc	fsr2h,f,c
  2511  000DC8  2ADE               	incf	postinc2,f,c
  2512  000DCA  0E00               	movlw	0
  2513  000DCC  22DD               	addwfc	postdec2,f,c
  2514  000DCE                     l885:
  2515  000DCE  0012               	return		;funcret
  2516  000DD0                     __end_of_fputc:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _putch *****************
  2520 ;; Defined at:
  2521 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  c               1    wreg     unsigned char 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  c               1    0[COMRAM] unsigned char 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		wreg
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2535 ;;      Params:         0       0       0       0       0       0       0
  2536 ;;      Locals:         0       0       0       0       0       0       0
  2537 ;;      Temps:          0       0       0       0       0       0       0
  2538 ;;      Totals:         0       0       0       0       0       0       0
  2539 ;;Total ram usage:        0 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_fputc
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text12
  2549  001216                     __ptext12:
  2550                           	callstack 0
  2551  001216                     _putch:
  2552                           	callstack 25
  2553  001216  0012               	return		;funcret
  2554  001218                     __end_of_putch:
  2555                           	callstack 0
  2556                           
  2557 ;; *************** function _escreve *****************
  2558 ;; Defined at:
  2559 ;;		line 74 in file "principal.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2573 ;;      Params:         0       0       0       0       0       0       0
  2574 ;;      Locals:         0       0       0       0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0       0       0
  2576 ;;      Totals:         0       0       0       0       0       0       0
  2577 ;;Total ram usage:        0 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    3
  2580 ;; This function calls:
  2581 ;;		_lcd_cmd
  2582 ;;		_lcd_str
  2583 ;; This function is called by:
  2584 ;;		_estadosMaquina
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text13
  2589  0011CC                     __ptext13:
  2590                           	callstack 0
  2591  0011CC                     _escreve:
  2592                           	callstack 26
  2593  0011CC                     
  2594                           ;principal.c: 76:     lcd_cmd(0x01);
  2595  0011CC  0E01               	movlw	1
  2596  0011CE  ECCF  F008         	call	_lcd_cmd
  2597                           
  2598                           ;principal.c: 77:     lcd_cmd(0x80 + 5);
  2599  0011D2  0E85               	movlw	133
  2600  0011D4  ECCF  F008         	call	_lcd_cmd
  2601  0011D8                     
  2602                           ;principal.c: 78:     lcd_str("Estado: ");
  2603  0011D8  0E0B               	movlw	low STR_1
  2604  0011DA  6E49               	movwf	lcd_str@str^0,c
  2605  0011DC  0E06               	movlw	high STR_1
  2606  0011DE  6E4A               	movwf	(lcd_str@str+1)^0,c
  2607  0011E0  ECA2  F007         	call	_lcd_str	;wreg free
  2608  0011E4                     
  2609                           ;principal.c: 79:     lcd_cmd(0x90 + 5);
  2610  0011E4  0E95               	movlw	149
  2611  0011E6  ECCF  F008         	call	_lcd_cmd
  2612                           
  2613                           ;principal.c: 80:     lcd_str(estadoMes);
  2614  0011EA  0E37               	movlw	low _estadoMes
  2615  0011EC  6E49               	movwf	lcd_str@str^0,c
  2616  0011EE  0E00               	movlw	high _estadoMes
  2617  0011F0  6E4A               	movwf	(lcd_str@str+1)^0,c
  2618  0011F2  ECA2  F007         	call	_lcd_str	;wreg free
  2619  0011F6  0012               	return		;funcret
  2620  0011F8                     __end_of_escreve:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function _lcd_str *****************
  2624 ;; Defined at:
  2625 ;;		line 76 in file "lcd.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  str             2    3[COMRAM] PTR const unsigned char 
  2628 ;;		 -> estadoMes(15), STR_1(9), 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  i               1    7[COMRAM] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2640 ;;      Params:         2       0       0       0       0       0       0
  2641 ;;      Locals:         1       0       0       0       0       0       0
  2642 ;;      Temps:          2       0       0       0       0       0       0
  2643 ;;      Totals:         5       0       0       0       0       0       0
  2644 ;;Total ram usage:        5 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    2
  2647 ;; This function calls:
  2648 ;;		_lcd_dat
  2649 ;; This function is called by:
  2650 ;;		_escreve
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text14
  2655  000F44                     __ptext14:
  2656                           	callstack 0
  2657  000F44                     _lcd_str:
  2658                           	callstack 26
  2659  000F44                     
  2660                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
  2661  000F44  0E00               	movlw	0
  2662  000F46  6E4D               	movwf	lcd_str@i^0,c
  2663                           
  2664                           ;lcd.c: 80:  while(str[i] != 0 )
  2665  000F48  EFBF  F007         	goto	l1508
  2666  000F4C                     l1504:
  2667                           
  2668                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
  2669  000F4C  504D               	movf	lcd_str@i^0,w,c
  2670  000F4E  2449               	addwf	lcd_str@str^0,w,c
  2671  000F50  6E4B               	movwf	??_lcd_str^0,c
  2672  000F52  0E00               	movlw	0
  2673  000F54  204A               	addwfc	(lcd_str@str+1)^0,w,c
  2674  000F56  6E4C               	movwf	(??_lcd_str+1)^0,c
  2675  000F58  C04B  FFF6         	movff	??_lcd_str,tblptrl
  2676  000F5C  C04C  FFF7         	movff	??_lcd_str+1,tblptrh
  2677  000F60  6AF8               	clrf	tblptru,c
  2678  000F62  0E05               	movlw	(high __ramtop+-1)
  2679  000F64  64F7               	cpfsgt	tblptrh,c
  2680  000F66  D003               	bra	u577
  2681  000F68  0008               	tblrd		*
  2682  000F6A  50F5               	movf	tablat,w,c
  2683  000F6C  D005               	bra	u570
  2684  000F6E                     u577:
  2685  000F6E  CFF6 FFE1          	movff	tblptrl,fsr1l
  2686  000F72  CFF7 FFE2          	movff	tblptrh,fsr1h
  2687  000F76  50E7               	movf	indf1,w,c
  2688  000F78                     u570:
  2689  000F78  ECB8  F008         	call	_lcd_dat
  2690  000F7C                     
  2691                           ;lcd.c: 83:    i++;
  2692  000F7C  2A4D               	incf	lcd_str@i^0,f,c
  2693  000F7E                     l1508:
  2694                           
  2695                           ;lcd.c: 80:  while(str[i] != 0 )
  2696  000F7E  504D               	movf	lcd_str@i^0,w,c
  2697  000F80  2449               	addwf	lcd_str@str^0,w,c
  2698  000F82  6E4B               	movwf	??_lcd_str^0,c
  2699  000F84  0E00               	movlw	0
  2700  000F86  204A               	addwfc	(lcd_str@str+1)^0,w,c
  2701  000F88  6E4C               	movwf	(??_lcd_str+1)^0,c
  2702  000F8A  C04B  FFF6         	movff	??_lcd_str,tblptrl
  2703  000F8E  C04C  FFF7         	movff	??_lcd_str+1,tblptrh
  2704  000F92  6AF8               	clrf	tblptru,c
  2705  000F94  0E05               	movlw	(high __ramtop+-1)
  2706  000F96  64F7               	cpfsgt	tblptrh,c
  2707  000F98  D003               	bra	u587
  2708  000F9A  0008               	tblrd		*
  2709  000F9C  50F5               	movf	tablat,w,c
  2710  000F9E  D005               	bra	u580
  2711  000FA0                     u587:
  2712  000FA0  CFF6 FFE1          	movff	tblptrl,fsr1l
  2713  000FA4  CFF7 FFE2          	movff	tblptrh,fsr1h
  2714  000FA8  50E7               	movf	indf1,w,c
  2715  000FAA                     u580:
  2716  000FAA  0900               	iorlw	0
  2717  000FAC  A4D8               	btfss	status,2,c
  2718  000FAE  EFDB  F007         	goto	u591
  2719  000FB2  EFDD  F007         	goto	u590
  2720  000FB6                     u591:
  2721  000FB6  EFA6  F007         	goto	l1504
  2722  000FBA                     u590:
  2723  000FBA  0012               	return		;funcret
  2724  000FBC                     __end_of_lcd_str:
  2725                           	callstack 0
  2726                           
  2727 ;; *************** function _lcd_dat *****************
  2728 ;; Defined at:
  2729 ;;		line 46 in file "lcd.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  val             1    wreg     unsigned char 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  val             1    2[COMRAM] unsigned char 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, status,2, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2743 ;;      Params:         0       0       0       0       0       0       0
  2744 ;;      Locals:         1       0       0       0       0       0       0
  2745 ;;      Temps:          1       0       0       0       0       0       0
  2746 ;;      Totals:         2       0       0       0       0       0       0
  2747 ;;Total ram usage:        2 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    1
  2750 ;; This function calls:
  2751 ;;		_lcd_wr
  2752 ;; This function is called by:
  2753 ;;		_lcd_str
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           	psect	text15
  2758  001170                     __ptext15:
  2759                           	callstack 0
  2760  001170                     _lcd_dat:
  2761                           	callstack 26
  2762                           
  2763                           ;incstack = 0
  2764                           ;lcd_dat@val stored from wreg
  2765  001170  6E48               	movwf	lcd_dat@val^0,c
  2766  001172                     
  2767                           ;lcd.c: 46: void lcd_dat(unsigned char val);lcd.c: 47: {;lcd.c: 48:  PORTEbits.RE1=1;
  2768  001172  8284               	bsf	132,1,c	;volatile
  2769  001174                     
  2770                           ;lcd.c: 49:         lcd_wr(val);
  2771  001174  5048               	movf	lcd_dat@val^0,w,c
  2772  001176  EC07  F009         	call	_lcd_wr
  2773  00117A                     
  2774                           ;lcd.c: 50:         PORTEbits.RE2=1;
  2775  00117A  8484               	bsf	132,2,c	;volatile
  2776  00117C                     
  2777                           ;lcd.c: 51:         _delay((unsigned long)((3)*(8000000/4000.0)));
  2778  00117C  0E08               	movlw	8
  2779  00117E  6E47               	movwf	??_lcd_dat^0,c
  2780  001180  0ECA               	movlw	202
  2781  001182                     u1117:
  2782  001182  2EE8               	decfsz	wreg,f,c
  2783  001184  D7FE               	bra	u1117
  2784  001186  2E47               	decfsz	??_lcd_dat^0,f,c
  2785  001188  D7FC               	bra	u1117
  2786  00118A                     
  2787                           ;lcd.c: 52:         PORTEbits.RE1=0;
  2788  00118A  9284               	bcf	132,1,c	;volatile
  2789  00118C                     
  2790                           ;lcd.c: 53:         _delay((unsigned long)((3)*(8000000/4000.0)));
  2791  00118C  0E08               	movlw	8
  2792  00118E  6E47               	movwf	??_lcd_dat^0,c
  2793  001190  0ECA               	movlw	202
  2794  001192                     u1127:
  2795  001192  2EE8               	decfsz	wreg,f,c
  2796  001194  D7FE               	bra	u1127
  2797  001196  2E47               	decfsz	??_lcd_dat^0,f,c
  2798  001198  D7FC               	bra	u1127
  2799  00119A                     
  2800                           ;lcd.c: 54:  PORTEbits.RE1=1;
  2801  00119A  8284               	bsf	132,1,c	;volatile
  2802  00119C  0012               	return		;funcret
  2803  00119E                     __end_of_lcd_dat:
  2804                           	callstack 0
  2805                           
  2806 ;; *************** function _lcd_cmd *****************
  2807 ;; Defined at:
  2808 ;;		line 35 in file "lcd.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  val             1    wreg     unsigned char 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  val             1    2[COMRAM] unsigned char 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2822 ;;      Params:         0       0       0       0       0       0       0
  2823 ;;      Locals:         1       0       0       0       0       0       0
  2824 ;;      Temps:          1       0       0       0       0       0       0
  2825 ;;      Totals:         2       0       0       0       0       0       0
  2826 ;;Total ram usage:        2 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    1
  2829 ;; This function calls:
  2830 ;;		_lcd_wr
  2831 ;; This function is called by:
  2832 ;;		_lcd_init
  2833 ;;		_escreve
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text16
  2838  00119E                     __ptext16:
  2839                           	callstack 0
  2840  00119E                     _lcd_cmd:
  2841                           	callstack 28
  2842                           
  2843                           ;incstack = 0
  2844                           ;lcd_cmd@val stored from wreg
  2845  00119E  6E48               	movwf	lcd_cmd@val^0,c
  2846  0011A0                     
  2847                           ;lcd.c: 35: void lcd_cmd(unsigned char val);lcd.c: 36: {;lcd.c: 37:  PORTEbits.RE1=1;
  2848  0011A0  8284               	bsf	132,1,c	;volatile
  2849  0011A2                     
  2850                           ;lcd.c: 38:         lcd_wr(val);
  2851  0011A2  5048               	movf	lcd_cmd@val^0,w,c
  2852  0011A4  EC07  F009         	call	_lcd_wr
  2853  0011A8                     
  2854                           ;lcd.c: 39:         PORTEbits.RE2=0;
  2855  0011A8  9484               	bcf	132,2,c	;volatile
  2856  0011AA                     
  2857                           ;lcd.c: 40:         _delay((unsigned long)((3)*(8000000/4000.0)));
  2858  0011AA  0E08               	movlw	8
  2859  0011AC  6E47               	movwf	??_lcd_cmd^0,c
  2860  0011AE  0ECA               	movlw	202
  2861  0011B0                     u1137:
  2862  0011B0  2EE8               	decfsz	wreg,f,c
  2863  0011B2  D7FE               	bra	u1137
  2864  0011B4  2E47               	decfsz	??_lcd_cmd^0,f,c
  2865  0011B6  D7FC               	bra	u1137
  2866  0011B8                     
  2867                           ;lcd.c: 41:         PORTEbits.RE1=0;
  2868  0011B8  9284               	bcf	132,1,c	;volatile
  2869  0011BA                     
  2870                           ;lcd.c: 42:         _delay((unsigned long)((3)*(8000000/4000.0)));
  2871  0011BA  0E08               	movlw	8
  2872  0011BC  6E47               	movwf	??_lcd_cmd^0,c
  2873  0011BE  0ECA               	movlw	202
  2874  0011C0                     u1147:
  2875  0011C0  2EE8               	decfsz	wreg,f,c
  2876  0011C2  D7FE               	bra	u1147
  2877  0011C4  2E47               	decfsz	??_lcd_cmd^0,f,c
  2878  0011C6  D7FC               	bra	u1147
  2879  0011C8                     
  2880                           ;lcd.c: 43:  PORTEbits.RE1=1;
  2881  0011C8  8284               	bsf	132,1,c	;volatile
  2882  0011CA  0012               	return		;funcret
  2883  0011CC                     __end_of_lcd_cmd:
  2884                           	callstack 0
  2885                           
  2886 ;; *************** function _lcd_wr *****************
  2887 ;; Defined at:
  2888 ;;		line 30 in file "lcd.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  val             1    wreg     unsigned char 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  val             1    0[COMRAM] unsigned char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		wreg
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2902 ;;      Params:         0       0       0       0       0       0       0
  2903 ;;      Locals:         1       0       0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0
  2905 ;;      Totals:         1       0       0       0       0       0       0
  2906 ;;Total ram usage:        1 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; This function calls:
  2909 ;;		Nothing
  2910 ;; This function is called by:
  2911 ;;		_lcd_cmd
  2912 ;;		_lcd_dat
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text17
  2917  00120E                     __ptext17:
  2918                           	callstack 0
  2919  00120E                     _lcd_wr:
  2920                           	callstack 28
  2921                           
  2922                           ;incstack = 0
  2923                           ;lcd_wr@val stored from wreg
  2924  00120E  6E46               	movwf	lcd_wr@val^0,c
  2925  001210                     
  2926                           ;lcd.c: 30: void lcd_wr(unsigned char val);lcd.c: 31: {;lcd.c: 32:   PORTD=val;
  2927  001210  C046  FF83         	movff	lcd_wr@val,3971	;volatile
  2928  001214  0012               	return		;funcret
  2929  001216                     __end_of_lcd_wr:
  2930                           	callstack 0
  2931                           
  2932                           	psect	rparam
  2933  0000                     
  2934                           	psect	idloc
  2935                           
  2936                           ;Config register IDLOC0 @ 0x200000
  2937                           ;	unspecified, using default values
  2938  200000                     	org	2097152
  2939  200000  FF                 	db	255
  2940                           
  2941                           ;Config register IDLOC1 @ 0x200001
  2942                           ;	unspecified, using default values
  2943  200001                     	org	2097153
  2944  200001  FF                 	db	255
  2945                           
  2946                           ;Config register IDLOC2 @ 0x200002
  2947                           ;	unspecified, using default values
  2948  200002                     	org	2097154
  2949  200002  FF                 	db	255
  2950                           
  2951                           ;Config register IDLOC3 @ 0x200003
  2952                           ;	unspecified, using default values
  2953  200003                     	org	2097155
  2954  200003  FF                 	db	255
  2955                           
  2956                           ;Config register IDLOC4 @ 0x200004
  2957                           ;	unspecified, using default values
  2958  200004                     	org	2097156
  2959  200004  FF                 	db	255
  2960                           
  2961                           ;Config register IDLOC5 @ 0x200005
  2962                           ;	unspecified, using default values
  2963  200005                     	org	2097157
  2964  200005  FF                 	db	255
  2965                           
  2966                           ;Config register IDLOC6 @ 0x200006
  2967                           ;	unspecified, using default values
  2968  200006                     	org	2097158
  2969  200006  FF                 	db	255
  2970                           
  2971                           ;Config register IDLOC7 @ 0x200007
  2972                           ;	unspecified, using default values
  2973  200007                     	org	2097159
  2974  200007  FF                 	db	255
  2975                           
  2976                           	psect	config
  2977                           
  2978                           ; Padding undefined space
  2979  300000                     	org	3145728
  2980  300000  FF                 	db	255
  2981                           
  2982                           ;Config register CONFIG1H @ 0x300001
  2983                           ;	Oscillator Selection bits
  2984                           ;	OSC = HS, HS oscillator
  2985                           ;	Fail-Safe Clock Monitor Enable bit
  2986                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2987                           ;	Internal/External Oscillator Switchover bit
  2988                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2989  300001                     	org	3145729
  2990  300001  02                 	db	2
  2991                           
  2992                           ;Config register CONFIG2L @ 0x300002
  2993                           ;	Power-up Timer Enable bit
  2994                           ;	PWRT = OFF, PWRT disabled
  2995                           ;	Brown-out Reset Enable bits
  2996                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2997                           ;	Brown Out Reset Voltage bits
  2998                           ;	BORV = 3, Minimum setting
  2999  300002                     	org	3145730
  3000  300002  19                 	db	25
  3001                           
  3002                           ;Config register CONFIG2H @ 0x300003
  3003                           ;	Watchdog Timer Enable bit
  3004                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3005                           ;	Watchdog Timer Postscale Select bits
  3006                           ;	WDTPS = 32768, 1:32768
  3007  300003                     	org	3145731
  3008  300003  1E                 	db	30
  3009                           
  3010                           ; Padding undefined space
  3011  300004                     	org	3145732
  3012  300004  FF                 	db	255
  3013                           
  3014                           ;Config register CONFIG3H @ 0x300005
  3015                           ;	CCP2 MUX bit
  3016                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3017                           ;	PORTB A/D Enable bit
  3018                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3019                           ;	Low-Power Timer1 Oscillator Enable bit
  3020                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3021                           ;	MCLR Pin Enable bit
  3022                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3023  300005                     	org	3145733
  3024  300005  81                 	db	129
  3025                           
  3026                           ;Config register CONFIG4L @ 0x300006
  3027                           ;	Stack Full/Underflow Reset Enable bit
  3028                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3029                           ;	Single-Supply ICSP Enable bit
  3030                           ;	LVP = OFF, Single-Supply ICSP disabled
  3031                           ;	Extended Instruction Set Enable bit
  3032                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3033                           ;	Background Debugger Enable bit
  3034                           ;	DEBUG = 0x1, unprogrammed default
  3035  300006                     	org	3145734
  3036  300006  80                 	db	128
  3037                           
  3038                           ; Padding undefined space
  3039  300007                     	org	3145735
  3040  300007  FF                 	db	255
  3041                           
  3042                           ;Config register CONFIG5L @ 0x300008
  3043                           ;	Code Protection bit
  3044                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3045                           ;	Code Protection bit
  3046                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3047                           ;	Code Protection bit
  3048                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3049                           ;	Code Protection bit
  3050                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3051  300008                     	org	3145736
  3052  300008  0F                 	db	15
  3053                           
  3054                           ;Config register CONFIG5H @ 0x300009
  3055                           ;	Boot Block Code Protection bit
  3056                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3057                           ;	Data EEPROM Code Protection bit
  3058                           ;	CPD = OFF, Data EEPROM not code-protected
  3059  300009                     	org	3145737
  3060  300009  C0                 	db	192
  3061                           
  3062                           ;Config register CONFIG6L @ 0x30000A
  3063                           ;	Write Protection bit
  3064                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3065                           ;	Write Protection bit
  3066                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3067                           ;	Write Protection bit
  3068                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3069                           ;	Write Protection bit
  3070                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3071  30000A                     	org	3145738
  3072  30000A  0F                 	db	15
  3073                           
  3074                           ;Config register CONFIG6H @ 0x30000B
  3075                           ;	Configuration Register Write Protection bit
  3076                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3077                           ;	Boot Block Write Protection bit
  3078                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3079                           ;	Data EEPROM Write Protection bit
  3080                           ;	WRTD = OFF, Data EEPROM not write-protected
  3081  30000B                     	org	3145739
  3082  30000B  E0                 	db	224
  3083                           
  3084                           ;Config register CONFIG7L @ 0x30000C
  3085                           ;	Table Read Protection bit
  3086                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3087                           ;	Table Read Protection bit
  3088                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3089                           ;	Table Read Protection bit
  3090                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3091                           ;	Table Read Protection bit
  3092                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3093  30000C                     	org	3145740
  3094  30000C  0F                 	db	15
  3095                           
  3096                           ;Config register CONFIG7H @ 0x30000D
  3097                           ;	Boot Block Table Read Protection bit
  3098                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3099  30000D                     	org	3145741
  3100  30000D  40                 	db	64
  3101                           tosu	equ	0xFFF
  3102                           tosh	equ	0xFFE
  3103                           tosl	equ	0xFFD
  3104                           stkptr	equ	0xFFC
  3105                           pclatu	equ	0xFFB
  3106                           pclath	equ	0xFFA
  3107                           pcl	equ	0xFF9
  3108                           tblptru	equ	0xFF8
  3109                           tblptrh	equ	0xFF7
  3110                           tblptrl	equ	0xFF6
  3111                           tablat	equ	0xFF5
  3112                           prodh	equ	0xFF4
  3113                           prodl	equ	0xFF3
  3114                           indf0	equ	0xFEF
  3115                           postinc0	equ	0xFEE
  3116                           postdec0	equ	0xFED
  3117                           preinc0	equ	0xFEC
  3118                           plusw0	equ	0xFEB
  3119                           fsr0h	equ	0xFEA
  3120                           fsr0l	equ	0xFE9
  3121                           wreg	equ	0xFE8
  3122                           indf1	equ	0xFE7
  3123                           postinc1	equ	0xFE6
  3124                           postdec1	equ	0xFE5
  3125                           preinc1	equ	0xFE4
  3126                           plusw1	equ	0xFE3
  3127                           fsr1h	equ	0xFE2
  3128                           fsr1l	equ	0xFE1
  3129                           bsr	equ	0xFE0
  3130                           indf2	equ	0xFDF
  3131                           postinc2	equ	0xFDE
  3132                           postdec2	equ	0xFDD
  3133                           preinc2	equ	0xFDC
  3134                           plusw2	equ	0xFDB
  3135                           fsr2h	equ	0xFDA
  3136                           fsr2l	equ	0xFD9
  3137                           status	equ	0xFD8

Data Sizes:
    Strings     62
    Constant    0
    Data        0
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     39     108
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> estadoMes(COMRAM[15]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_11(CODE[10]), STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[8]), 
		 -> STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 10
		 -> STR_11(CODE[10]), STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[8]), 
		 -> STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_11(CODE[10]), STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[8]), 
		 -> STR_7(CODE[9]), STR_6(CODE[9]), STR_5(CODE[8]), STR_4(CODE[9]), 
		 -> STR_3(CODE[9]), STR_2(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 15
		 -> estadoMes(COMRAM[15]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S812_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 15
		 -> estadoMes(COMRAM[15]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> estadoMes(COMRAM[15]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 15
		 -> estadoMes(COMRAM[15]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_estadosMaquina
    _lcd_init->_lcd_cmd
    _estadosMaquina->_sprintf
    _timer->___awdiv
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _escreve->_lcd_str
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_cmd->_lcd_wr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5348
                     _estadosMaquina
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      30
                                              3 COMRAM     1     1      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _estadosMaquina                                       2     2      0    5318
                                             37 COMRAM     2     2      0
                            _escreve
                            _sprintf
                              _timer
                         _tocaBuzzer
 ---------------------------------------------------------------------------------
 (2) _tocaBuzzer                                           3     3      0      30
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _timer                                               10     8      2    1711
                                              8 COMRAM    10     8      2
                            ___awdiv
                            ___awmod
                          _display7s
 ---------------------------------------------------------------------------------
 (3) _display7s                                            3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14    10      4    3275
                                             23 COMRAM    14    10      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    1558
                                             15 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           40    34      6    1208
                                              9 COMRAM     6     0      6
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     782
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _escreve                                              0     0      0     302
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (3) _lcd_str                                              5     3      2     272
                                              3 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (4) _lcd_dat                                              2     2      0      30
                                              1 COMRAM     2     2      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      30
                                              1 COMRAM     2     2      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _estadosMaquina
     _escreve
       _lcd_cmd
         _lcd_wr
       _lcd_str
         _lcd_dat
           _lcd_wr
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
     _timer
       ___awdiv
       ___awmod
       _display7s
     _tocaBuzzer
   _lcd_init
     _lcd_cmd
       _lcd_wr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     27      6C       1       85.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6C      15        0.0%
DATA                 0      0      6C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 07 14:44:52 2021

                         l9 1214                          l12 11CA                          l15 119C  
                        l24 0FBA                          l18 101C                          l75 10DC  
                        l77 1120                          l86 0B12                          l95 09CA  
                        l89 11F6                          l97 073A                          l99 0708  
              ___awdiv@sign 004B              _liquidoSecante 002B  _escoamentoDoLiquidoSecante 0029  
                       l111 08BC                         l123 09CA                         l400 0F42  
                       l136 0C1A                         l387 0E92                         l904 1210  
                       l920 1172                         l930 118C                         l922 1174  
                       l834 116E                         l932 119A                         l924 117A  
                       l926 117C                         l928 118A                         l872 1072  
                       l873 107A                         l970 11A8                         l867 0D04  
                       l972 11AA                         l885 0DCE                         l974 11B8  
                       l966 11A0                         l990 0B1A                         l976 11BA  
                       l968 11A2                         l896 1216                         l978 11C8  
                       l994 0B20                         l988 0B16                         l998 0B26  
                       u230 1120                         u231 111C                         u510 0D18  
                       u511 0D14                         u520 0D2A                         u600 0DE2  
                       u521 0D26                         u601 0DDE                         u530 0D52  
                       u610 0DFC                         u531 0D4E                         u611 0DF8  
                       u540 0D88                         u620 0E22                         u700 0F0E  
                       u541 0D84                         u621 0E1E                         u701 0F0A  
                       u550 0C40                         u630 0E40                         u710 0F32  
                       u551 0C3C                         u631 0E3C                         u711 0F2E  
                       u560 0C86                         u720 1072                         u640 0E5C  
                       u800 06B4                         u561 0C82                         u721 106E  
                       u641 0E58                         u801 06B0                         u570 0F78  
                       u650 0E82                         u730 09EC                         u810 06EC  
                       u651 0E7E                         u731 09E8                         u811 06E8  
                       u580 0FAA                         u660 0EA6                         u740 0AE2  
                       u900 086A                         u820 06FA                         u661 0EA2  
                       u741 0ADE                         u901 0866                         u821 06F6  
                       u590 0FBA                         u670 0EC0                         u750 0AF4  
                       u910 0878                         u830 0708                         u591 0FB6  
                       u671 0EBC                         u751 0AF0                         u911 0874  
                       u831 0704                         u680 0EDA                         u760 0B06  
                       u920 08CA                         u840 0748                         u577 0F6E  
                       u681 0ED6                         u761 0B02                         u921 08C6  
                       u841 0744                         u690 0EF8                         u930 08D8  
                       u850 07BA                         u770 0652                         u587 0FA0  
                       u691 0EF4                         u931 08D4                         u851 07B6  
                       u771 064E                         u940 0916                         u860 07C8  
                       u780 0660                         u941 0912                         u861 07C4  
                       u781 065C                         u950 0924                         u870 07D6  
                       u790 06A6                         u951 0920                         u871 07D2  
                       u791 06A2                         u960 0932                         u880 0814  
                       u961 092E                         u881 0810                         u970 0944  
                       u890 085C                         u971 0940                         u891 0858  
                       u980 098A                         u981 0986                         u990 0998  
                       u991 0994                ___awmod@sign 004B                         wreg 000FE8  
               _statusTimer 0035                        l1010 0B38                        l1002 0B2C  
                      l1030 0B56                        l1022 0B4A                        l1014 0B3E  
                      l1006 0B32                        l1050 0B74                        l1042 0B68  
                      l1034 0B5C                        l1026 0B50                        l1018 0B44  
                      l1060 0B80                        l1054 0B7A                        l1046 0B6E  
                      l1038 0B62                        l1160 10DE                        l1162 10EE  
                      l1154 10D4                        l1250 0FD6                        l1242 0FBC  
                      l1164 1100                        l1260 100A                        l1252 0FEA  
                      l1244 0FC0                        l1502 0F44                        l1510 0DD0  
                      l1262 1010                        l1254 0FF8                        l1246 0FCE  
                      l1504 0F4C                        l1520 0DFC                        l1512 0DD4  
                      l1600 09D8                        l1264 1016                        l1256 0FFE  
                      l1248 0FD0                        l1506 0F7C                        l1530 0E2A  
                      l1522 0E04                        l1514 0DE2                        l1258 1004  
                      l1508 0F7E                        l1460 0D2A                        l1540 0E64  
                      l1532 0E32                        l1524 0E08                        l1516 0DEA  
                      l1620 0A68                        l1612 0A2C                        l1604 09F0  
                      l1700 06D4                        l1462 0D34                        l1470 0C1C  
                      l1550 0E8A                        l1542 0E66                        l1534 0E40  
                      l1526 0E10                        l1518 0DEE                        l1630 0A9C  
                      l1622 0A6C                        l1614 0A64                        l1606 0A28  
                      l1710 06FA                        l1464 0D52                        l1456 0D06  
                      l1480 0C86                        l1472 0C40                        l1544 0E6C  
                      l1536 0E46                        l1528 0E22                        l1560 0EAE  
                      l1640 0AD0                        l1632 0AA0                        l1624 0A74  
                      l1800 0916                        l1720 0732                        l1712 070A  
                      l1466 0D88                        l1458 0D18                        l1490 0CC2  
                      l1482 0C94                        l1474 0C4E                        l1538 0E5C  
                      l1546 0E72                        l1570 0EE2                        l1562 0EB2  
                      l1554 0E94                        l1650 0AF6                        l1642 0AD2  
                      l1634 0AA8                        l1626 0A82                        l1810 095E  
                      l1802 0924                        l1730 076A                        l1722 0748  
                      l1714 071A                        l1706 06DA                        l1660 11E4  
                      l1484 0CA8                        l1476 0C5E                        l1548 0E82  
                      l1580 0F1C                        l1572 0EEA                        l1564 0EC0  
                      l1556 0E98                        l1644 0AE2                        l1636 0AB6  
                      l1628 0A86                        l1652 0B06                        l1820 0998  
                      l1812 0960                        l1804 0932                        l1732 0772  
                      l1724 074C                        l1716 071C                        l1708 06EC  
                      l1740 07A8                        l1478 0C62                        l1494 0CCE  
                      l1590 101E                        l1670 115E                        l1662 1122  
                      l1574 0EF8                        l1582 0F22                        l1566 0EC8  
                      l1558 0EA6                        l1646 0AE4                        l1638 0AC2  
                      l1830 09B2                        l1822 09A8                        l1806 0944  
                      l1750 07E8                        l1742 07BA                        l1734 0776  
                      l1726 0754                        l1718 071E                        l1656 11CC  
                      l1496 0CF2                        l1488 0CB4                        l1592 1026  
                      l1664 1132                        l1584 0F32                        l1576 0F0E  
                      l1568 0EDA                        l1648 0AF4                        l1824 09AA  
                      l1808 095C                        l1816 0978                        l1760 0824  
                      l1752 07EA                        l1744 07C8                        l1736 078E  
                      l1728 0756                        l1680 0668                        l1840 1098  
                      l1658 11D8                        l1594 1032                        l1666 113A  
                      l1586 0F3A                        l1578 0F16                        l1826 09AC  
                      l1818 098A                        l1770 085C                        l1762 0826  
                      l1746 07D6                        l1738 07A2                        l1690 06A6  
                      l1682 066A                        l1674 0640                        l1850 10C0  
                      l1842 10A0                        l1834 107C                        l1596 1056  
                      l1668 1142                        l1828 09B0                        l1780 088C  
                      l1772 086A                        l1764 083A                        l1748 07E6  
                      l1756 0802                        l1692 06B4                        l1684 067E  
                      l1676 0652                        l1852 10C2                        l1844 10A8  
                      l1836 108C                        l1598 09CC                        l1790 08E8  
                      l1782 08A0                        l1774 0878                        l1766 083E  
                      l1758 0814                        l1694 06BC                        l1686 0682  
                      l1678 0660                        l1854 10C4                        l1846 10B0  
                      l1838 1090                        l1864 0B94                        l1792 08EA  
                      l1784 08A4                        l1776 0888                        l1768 084A  
                      l1696 06BE                        l1688 0694                        l1856 10C6  
                      l1848 10B8                        l1794 08EC                        l1786 08CA  
                      l1778 088A                        l1698 06C0                        l1858 10C8  
                      l1788 08D8                        l1798 0904                        STR_1 060B  
                      STR_2 0604                        STR_3 0626                        STR_4 061D  
                      STR_5 0637                        STR_6 061D                        STR_7 0614  
                      STR_8 062F                        STR_9 061D                        u1007 0FC6  
                      u1017 0FDC                        u1107 0AC8                        u1027 0FF0  
                      u1117 1182                        u1037 0688                        u1127 1192  
                      u1047 0780                        u1137 11B0                        u1057 10E4  
                      u1147 11C0                        u1067 10F6                        u1077 0A7A  
                      u1087 0A94                        u1097 0AAE                        _dbuf 0001  
                      _main 107C                        _prec 0025                        _nout 0021  
                      fsr1h 000FE2                        fsr2h 000FDA                        indf1 000FE7  
                      indf2 000FDF                        fsr1l 000FE1                        fsr2l 000FD9  
            _cicloDeLavagem 002F                        start 0000                ___param_bank 000000  
                     ?_main 0046             __end_of___awdiv 0E94                       STR_10 061D  
                     STR_11 0601             __end_of___awmod 0F44             ___awdiv@divisor 0048  
           ___awdiv@counter 004A                vfpfcnvrt@fmt 0051                       _PORTA 000F80  
                     _PORTD 000F83                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISC 000F94                       _TRISD 000F95                       _TRISE 000F96  
           __end_of_lcd_dat 119E             __end_of_lcd_cmd 11CC             __end_of_lcd_str 0FBC  
           __end_of_escreve 11F8                       _flags 0027                       _fputc 0D06  
                     _timer 09CC                       _width 0023                       _putch 1216  
                     tablat 000FF5                       status 000FD8             __end_of_sprintf 1170  
           __initialization 11F8                __end_of_main 10D4                      ??_main 006D  
             __activetblptr 000002                      _ADCON1 000FC1                      ?_fputc 0046  
          ___awdiv@dividend 0046                      ?_timer 004E                      ?_putch 0046  
              vfprintf@cfmt 005B            __end_of_lcd_init 101E                   ??___awdiv 004A  
                 ??___awmod 004A                      _lcd_wr 120E                      clear_0 11FE  
          ___awdiv@quotient 004C             ___awmod@divisor 0048             ___awmod@counter 004A  
                 ??_lcd_dat 0047                   ??_lcd_cmd 0047                   ??_lcd_str 004B  
                 ??_escreve 004E                      fputc@c 0046                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                    timer@i 0057                      timer@j 0055                      timer@k 0056  
                    putch@c 0046            __end_of_vfprintf 107C                   ??_sprintf 0061  
                __accesstop 0080     __end_of__initialization 1204               ___rparam_used 000001  
            __pcstackCOMRAM 0046               __end_of_fputc 0DD0               __end_of_timer 0B14  
             __end_of_putch 1218          __size_of_display7s 0108                     ??_fputc 004A  
                   ??_timer 0050                     ??_putch 0046     __size_of_estadosMaquina 038C  
                   ?_lcd_wr 0046          __size_of_vfpfcnvrt 00EA                  _drenarAgua 002D  
                 ?_lcd_init 0046                     __Hparam 0000                     __Lparam 0000  
         __end_of_display7s 0C1C                     ___awdiv 0DD0                     ___awmod 0E94  
                 ?_vfprintf 0055                __psmallconst 0600             __size_of_lcd_wr 0008  
                   __pcinit 11F8                     __ramtop 0600                     __ptext0 107C  
                   __ptext1 0FBC                     __ptext2 0640                     __ptext3 10D4  
                   __ptext4 09CC                     __ptext5 0B14                     __ptext6 0E94  
                   __ptext7 0DD0                     __ptext8 1122                     __ptext9 101E  
                   _lcd_dat 1170                     _lcd_cmd 119E                     _lcd_str 0F44  
                   _escreve 11CC            ___awmod@dividend 0046                     _sprintf 1122  
                ??_lcd_init 0049                 tocaBuzzer@i 0047        end_of_initialization 1204  
                   fputc@fp 0048               __Lmediumconst 0000           __end_of_vfpfcnvrt 0D06  
                _tocaBuzzer 10D4                     postdec2 000FDD                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE                  ??_vfprintf 005B  
                 _PORTBbits 000F81                   _PORTCbits 000F82                   _PORTEbits 000F84  
                lcd_dat@val 0048                  lcd_cmd@val 0048              _estadosMaquina 0640  
                display7s@v 0048                  lcd_str@str 0049                 vfpfcnvrt@ap 0053  
               vfpfcnvrt@fp 004F              __end_of_lcd_wr 1216         start_initialization 11F8  
    __end_of_estadosMaquina 09CC                 vfprintf@fmt 0057                 ?_tocaBuzzer 0046  
                  ??_lcd_wr 0046                 __pbssCOMRAM 0001             ?_estadosMaquina 0046  
         __size_of_lcd_init 0062                    ?___awdiv 0046                    ?___awmod 0046  
                 _desligado 0033                   _display7s 0B14                    ?_lcd_dat 0046  
                  ?_lcd_cmd 0046           __size_of_vfprintf 005E                    ?_lcd_str 0049  
                  ?_escreve 0046                 __smallconst 0600                   _estadoMes 0037  
       __size_of_tocaBuzzer 004E                    ?_sprintf 005D              __size_of_fputc 00CA  
            __size_of_timer 0148              __size_of_putch 0002                   _vfpfcnvrt 0C1C  
                ?_display7s 0046                   lcd_wr@val 0046                    __Hrparam 0000  
                vfprintf@ap 0059                    __Lrparam 0000                  vfprintf@fp 0055  
          __size_of___awdiv 00C4            __size_of___awmod 00B0                  ?_vfpfcnvrt 004F  
          __size_of_lcd_dat 002E            __size_of_lcd_cmd 002E                  sprintf@fmt 005F  
          __size_of_lcd_str 0078            __size_of_escreve 002C                    __ptext10 0C1C  
                  __ptext11 0D06                    __ptext12 1216                    __ptext13 11CC  
                  __ptext14 0F44                    __ptext15 1170                    __ptext16 119E  
                  __ptext17 120E                    _lcd_init 0FBC            __size_of_sprintf 004E  
             __size_of_main 0058                ??_tocaBuzzer 0046                   timer@minD 0054  
                 timer@minU 0053                   timer@segD 0052                   timer@segU 0051  
                  _vfprintf 101E                    lcd_str@i 004D                 ??_display7s 0046  
          ??_estadosMaquina 006B          __end_of_tocaBuzzer 1122                   sprintf@ap 0063  
      _enchendoDeAguaESabao 0031                    timer@min 004E                 ??_vfpfcnvrt 0055  
                  sprintf@f 0065                    sprintf@s 005D  
